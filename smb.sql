PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "tblTlmDictionary" (
	`PK_TLM_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`TLM_NAME`	TEXT NOT NULL UNIQUE,
	`LO_YELLOW`	REAL NOT NULL,
	`HI_YELLOW`	REAL NOT NULL,
	`LO_RED`	REAL NOT NULL,
	`HI_RED`	REAL NOT NULL,
	`USED`	INTEGER,
	`Description`	TEXT
);
INSERT INTO "tblTlmDictionary" VALUES(1,'T1',35.0,40.0,305.0,310.0,1,'RTD1');
INSERT INTO "tblTlmDictionary" VALUES(2,'T2',35.0,40.0,305.0,310.0,1,'RTD2');
CREATE TABLE IF NOT EXISTS "tblSmbCmds" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`READ`	INTEGER,
	`WRITE`	INTEGER,
	`CMD`	TEXT NOT NULL UNIQUE,
	`P1_DEF`	INTEGER NOT NULL,
	`P1_MIN`	INTEGER NOT NULL,
	`P1_MAX`	INTEGER NOT NULL,
	`P2_DEF`	REAL NOT NULL,
	`P2_MIN`	REAL NOT NULL,
	`P2_MAX`	REAL NOT NULL,
	`RETURNS`	TEXT NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO "tblSmbCmds" VALUES(1,1,1,'A',0,0,65535,0.0,0.0,0.0,'uint8','Write/read Board ID');
INSERT INTO "tblSmbCmds" VALUES(4,1,1,'D',1,1,2,0.0,0.0,100.0,'uint8','PID Derivative D factor');
INSERT INTO "tblSmbCmds" VALUES(5,0,1,'E',0,0,0,0.0,0.0,0.0,'uint8','Reset CPU');
INSERT INTO "tblSmbCmds" VALUES(6,1,1,'F',1,1,2,1.0,0.0,1.0,'uint8','Switched High Power output');
INSERT INTO "tblSmbCmds" VALUES(8,1,0,'H',0,0,0,0.0,0.0,100.0,'double','Read Humidity Sensor (Humidity : Temp)');
INSERT INTO "tblSmbCmds" VALUES(9,1,1,'I',1,1,2,0.0,0.0,100.0,'double','PID Integral I factor');
INSERT INTO "tblSmbCmds" VALUES(10,1,1,'J',1,1,2,1.0,1.0,12.0,'uint8','Loop control sensor#');
INSERT INTO "tblSmbCmds" VALUES(11,1,0,'K',1,1,12,0.0,0.0,10000.0,'double','Read sensor temperature');
INSERT INTO "tblSmbCmds" VALUES(12,1,1,'L',1,1,2,0.0,0.0,2.0,'uint8','Htr Amp status(0=Disabled, 1=Fixed Percent, 2=PID Control)');
INSERT INTO "tblSmbCmds" VALUES(14,1,1,'N',0,0,255,0.0,0.0,255.0,'uint8','Read the software revision');
INSERT INTO "tblSmbCmds" VALUES(16,1,1,'P',1,1,3,0.0,0.0,100.0,'double','PID Proportional P factor');
INSERT INTO "tblSmbCmds" VALUES(17,1,1,'Q',1,1,12,0.0,0.0,7.0,'uint8','ADC Filter Setting');
INSERT INTO "tblSmbCmds" VALUES(18,1,1,'R',1,1,12,10000.0,0.0,100000.0,'double','Thermistor Resistance @25C');
INSERT INTO "tblSmbCmds" VALUES(19,1,1,'S',1,1,12,1.0,1.0,3.0,'uint8','Sensor Type (0=RAW;1=DT670;2=THERMISTOR;3=RTD)');
INSERT INTO "tblSmbCmds" VALUES(21,1,1,'U',1,1,12,0.0,0.2,0.0,'uint8','Temperature Units (0=K;1=C;2=F)');
INSERT INTO "tblSmbCmds" VALUES(22,1,1,'V',1,1,2,0.0,0.0,100.0,'double','Heater Current (percent)');
INSERT INTO "tblSmbCmds" VALUES(23,1,1,'W',1,1,2,-460.0,0.0,500.0,'double','LOOP SetPoint (SP)');
INSERT INTO "tblSmbCmds" VALUES(24,1,1,'X',1,1,12,0.0,0.0,5.0,'uint8','Excitation current (0=50μA, 1=100μA, 2=250μA, 3=500μA, 4=750μA, 5=1mA)');
INSERT INTO "tblSmbCmds" VALUES(34,1,0,'i',1,1,2,0.0,0.0,0.0,'uint8','Read Heater Current');
INSERT INTO "tblSmbCmds" VALUES(36,1,0,'t',0,0,0,0.0,0.0,0.0,'string','Read all temp sensors');
INSERT INTO "tblSmbCmds" VALUES(37,1,0,'r',0,0,0,0.0,0.0,0.0,'string','Read all sensor resistances');
INSERT INTO "tblSmbCmds" VALUES(38,1,0,'v',0,0,0,0.0,0.0,0.0,'string','Read voltage at sensor');
CREATE TABLE IF NOT EXISTS "tblDacRegisters" (
	`NAME`	TEXT NOT NULL,
	`ADDRESS`	INTEGER NOT NULL UNIQUE,
	`DEFAULT`	INTEGER NOT NULL,
	`PER_CHAN`	INTEGER NOT NULL,
	`READ`	INTEGER NOT NULL,
	`WRITE`	INTEGER
);
INSERT INTO "tblDacRegisters" VALUES('no_operation',0,0,0,0,1);
INSERT INTO "tblDacRegisters" VALUES('reset',1,0,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('reset_config',2,0,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('select_dac',3,0,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('configuration_dac',4,0,1,1,1);
INSERT INTO "tblDacRegisters" VALUES('DAC_data',5,0,1,1,1);
INSERT INTO "tblDacRegisters" VALUES('Select_Buck_Boost_converter',6,0,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('configuration_Buck_Boost_converter',7,0,1,1,1);
INSERT INTO "tblDacRegisters" VALUES('dac_channel_calibration_enable',8,0,1,1,1);
INSERT INTO "tblDacRegisters" VALUES('dac_channel_gain_calibration',9,0,1,1,1);
INSERT INTO "tblDacRegisters" VALUES('dac_channel_offset_calibration',10,0,1,1,1);
INSERT INTO "tblDacRegisters" VALUES('status',11,4096,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('status_mask',12,0,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('alarm_action',13,0,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('user_alarm_code',14,0,1,1,1);
INSERT INTO "tblDacRegisters" VALUES('reserved',15,0,1,0,0);
INSERT INTO "tblDacRegisters" VALUES('write_watchdog_timer_reset',16,0,0,1,1);
INSERT INTO "tblDacRegisters" VALUES('device_ID',17,0,0,1,1);
CREATE TABLE IF NOT EXISTS "tblHtrParams" (
	`PK_HTR_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`P`	REAL NOT NULL,
	`I`	REAL NOT NULL,
	`D`	REAL NOT NULL,
	`set_pt`	REAL NOT NULL,
	`ctrl_sensor`	INTEGER NOT NULL,
	`mode`	INTEGER NOT NULL,
	`htr_current`	REAL NOT NULL
);
INSERT INTO "tblHtrParams" VALUES(1,1.0,2.0,3.0,280.0,4,0,0.0);
INSERT INTO "tblHtrParams" VALUES(2,10.0,0.0,0.0,300.0,4,0,0.0);
CREATE TABLE IF NOT EXISTS "tblAdcRegisters" (
	`NAME`	TEXT NOT NULL,
	`ADDRESS`	INTEGER NOT NULL,
	`DEFAULT`	INTEGER NOT NULL,
	`BYTES`	INTEGER NOT NULL,
	`READ`	INTEGER NOT NULL,
	`WRITE`	INTEGER NOT NULL,
	PRIMARY KEY(`ADDRESS`)
);
INSERT INTO "tblAdcRegisters" VALUES('Status',0,0,1,1,1);
INSERT INTO "tblAdcRegisters" VALUES('ADC_Control',1,0,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Data',2,0,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('IOCon1',3,0,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('IOCon2',4,0,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('ID',5,18,1,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Error',6,0,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Error_En',7,1024,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Mclk_Count',8,0,1,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_0',9,32769,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_1',10,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_2',11,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_3',12,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_4',13,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_5',14,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_6',15,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_7',16,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_8',17,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_9',18,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_10',19,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_11',20,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_12',21,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_13',22,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_14',23,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Channel_15',24,1,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_0',25,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_1',26,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_2',27,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_3',28,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_4',29,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_5',30,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_6',31,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Config_7',32,2144,2,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_0',33,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_1',34,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_2',35,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_3',36,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_4',37,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_5',38,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_6',39,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Filter_7',40,393600,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_0',41,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_1',42,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_2',43,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_3',44,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_4',45,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_5',46,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_6',47,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Offset_7',48,8388608,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_0',49,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_1',50,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_2',51,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_3',52,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_4',53,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_5',54,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_6',55,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('Gain_7',56,5242880,3,1,1);
INSERT INTO "tblAdcRegisters" VALUES('reset',255,5242880,3,1,1);
CREATE TABLE `tblSmbParams` (
        `PK_ID` INTEGER PRIMARY KEY AUTOINCREMENT,
        `NAME`  TEXT NOT NULL,
        `VALUE` NUMERIC NOT NULL
);
INSERT INTO "tblSmbParams" VALUES(1,'BOARD_ID',5);
INSERT INTO "tblSmbParams" VALUES(2,'SOFTWARE_REV',0.064);
CREATE TABLE IF NOT EXISTS "tblTemperatureUnits" (
        `PK_ID` INTEGER NOT NULL UNIQUE,
        `UNIT`  TEXT NOT NULL UNIQUE,
        `DESCRIPTION`   TEXT NOT NULL UNIQUE
);
INSERT INTO "tblTemperatureUnits" VALUES(0,'K','KELVIN');
INSERT INTO "tblTemperatureUnits" VALUES(1,'C','CELSIUS');
INSERT INTO "tblTemperatureUnits" VALUES(2,'F','FAHRENHEIT');
CREATE TABLE IF NOT EXISTS "tblSensorData" (
        `PK_DEV_ID`     INTEGER PRIMARY KEY AUTOINCREMENT,
        `Device`        TEXT NOT NULL UNIQUE,
        `C0`    REAL,
        `C1`    REAL,
        `C2`    REAL,
        `C3`    REAL,
        `C4`    REAL,
        `C5`    REAL,
        `C6`    REAL,
        `C7`    REAL
);
INSERT INTO "tblSensorData" VALUES(1,'PT100',100.0,0.00385,1.4999,0.10863,0.0,0.0,0.0,0.0);
INSERT INTO "tblSensorData" VALUES(2,'PT1000',1000.0,0.00375,1.605,0.16,0.0,0.0,0.0,0.0);
INSERT INTO "tblSensorData" VALUES(3,'NTC_THERMISTOR',10000.0,3669.0,0.0,0.0,0.0,0.0,0.0,0.0);
CREATE TABLE IF NOT EXISTS "tblAdcRegBits" (
	`PK_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`FK_PARENT_ID`	INTEGER NOT NULL,
        `ADC_NUM` INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO "tblAdcRegBits" VALUES(null,0,1,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,1,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,1,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,1,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,1,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,1,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,1,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,1,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,1,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,1,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,1,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,1,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,1,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,1,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,1,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,1,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,1,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,1,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,1,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,1,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,1,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,1,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,1,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,1,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,1,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,1,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,1,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,1,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,1,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,1,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,1,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,1,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,1,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,1,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,1,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,1,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,1,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,1,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,1,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,1,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,1,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,1,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,1,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,1,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,1,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,1,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,1,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,1,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,1,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,1,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,1,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,1,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,1,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,1,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,1,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,1,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,1,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,1,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,1,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,1,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,1,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,1,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,1,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,1,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,1,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,1,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,1,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,1,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,1,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,1,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,1,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,1,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,1,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,1,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,1,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,1,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,1,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,1,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,1,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,1,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,1,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,1,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,1,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,1,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,1,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,1,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,1,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,1,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,1,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,1,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,1,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,1,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,1,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,1,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,1,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,1,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,1,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,1,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,1,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,1,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,1,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,1,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,1,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,1,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,1,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,1,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,1,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,1,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,1,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,1,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,1,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,1,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,1,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,1,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,1,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,1,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,1,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,1,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,1,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,1,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,1,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,1,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,1,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,1,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,2,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,2,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,2,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,2,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,2,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,2,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,2,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,2,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,2,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,2,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,2,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,2,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,2,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,2,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,2,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,2,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,2,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,2,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,2,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,2,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,2,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,2,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,2,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,2,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,2,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,2,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,2,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,2,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,2,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,2,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,2,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,2,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,2,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,2,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,2,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,2,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,2,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,2,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,2,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,2,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,2,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,2,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,2,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,2,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,2,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,2,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,2,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,2,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,2,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,2,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,2,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,2,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,2,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,2,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,2,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,2,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,2,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,2,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,2,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,2,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,2,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,2,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,2,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,2,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,2,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,2,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,2,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,2,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,2,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,2,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,2,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,2,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,2,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,2,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,2,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,2,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,2,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,2,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,2,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,2,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,2,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,2,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,2,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,2,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,2,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,2,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,2,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,2,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,2,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,2,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,2,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,2,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,2,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,2,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,2,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,2,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,2,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,2,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,2,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,2,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,2,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,2,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,2,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,2,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,2,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,2,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,2,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,2,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,2,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,2,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,2,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,2,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,2,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,2,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,2,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,2,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,2,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,2,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,2,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,2,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,2,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,2,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,2,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,2,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,3,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,3,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,3,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,3,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,3,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,3,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,3,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,3,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,3,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,3,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,3,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,3,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,3,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,3,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,3,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,3,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,3,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,3,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,3,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,3,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,3,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,3,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,3,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,3,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,3,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,3,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,3,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,3,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,3,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,3,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,3,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,3,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,3,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,3,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,3,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,3,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,3,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,3,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,3,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,3,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,3,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,3,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,3,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,3,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,3,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,3,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,3,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,3,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,3,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,3,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,3,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,3,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,3,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,3,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,3,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,3,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,3,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,3,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,3,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,3,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,3,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,3,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,3,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,3,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,3,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,3,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,3,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,3,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,3,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,3,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,3,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,3,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,3,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,3,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,3,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,3,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,3,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,3,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,3,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,3,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,3,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,3,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,3,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,3,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,3,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,3,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,3,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,3,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,3,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,3,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,3,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,3,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,3,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,3,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,3,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,3,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,3,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,3,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,3,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,3,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,3,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,3,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,3,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,3,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,3,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,3,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,3,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,3,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,3,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,3,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,3,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,3,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,3,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,3,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,3,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,3,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,3,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,3,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,3,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,3,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,3,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,3,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,3,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,3,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,4,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,4,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,4,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,4,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,4,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,4,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,4,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,4,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,4,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,4,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,4,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,4,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,4,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,4,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,4,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,4,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,4,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,4,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,4,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,4,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,4,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,4,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,4,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,4,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,4,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,4,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,4,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,4,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,4,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,4,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,4,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,4,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,4,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,4,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,4,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,4,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,4,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,4,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,4,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,4,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,4,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,4,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,4,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,4,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,4,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,4,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,4,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,4,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,4,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,4,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,4,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,4,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,4,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,4,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,4,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,4,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,4,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,4,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,4,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,4,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,4,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,4,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,4,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,4,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,4,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,4,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,4,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,4,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,4,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,4,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,4,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,4,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,4,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,4,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,4,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,4,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,4,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,4,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,4,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,4,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,4,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,4,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,4,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,4,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,4,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,4,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,4,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,4,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,4,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,4,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,4,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,4,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,4,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,4,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,4,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,4,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,4,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,4,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,4,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,4,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,4,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,4,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,4,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,4,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,4,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,4,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,4,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,4,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,4,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,4,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,4,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,4,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,4,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,4,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,4,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,4,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,4,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,4,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,4,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,4,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,4,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,4,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,4,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,4,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,5,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,5,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,5,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,5,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,5,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,5,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,5,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,5,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,5,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,5,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,5,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,5,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,5,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,5,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,5,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,5,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,5,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,5,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,5,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,5,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,5,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,5,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,5,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,5,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,5,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,5,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,5,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,5,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,5,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,5,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,5,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,5,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,5,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,5,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,5,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,5,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,5,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,5,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,5,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,5,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,5,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,5,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,5,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,5,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,5,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,5,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,5,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,5,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,5,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,5,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,5,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,5,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,5,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,5,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,5,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,5,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,5,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,5,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,5,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,5,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,5,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,5,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,5,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,5,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,5,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,5,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,5,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,5,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,5,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,5,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,5,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,5,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,5,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,5,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,5,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,5,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,5,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,5,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,5,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,5,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,5,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,5,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,5,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,5,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,5,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,5,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,5,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,5,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,5,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,5,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,5,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,5,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,5,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,5,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,5,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,5,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,5,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,5,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,5,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,5,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,5,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,5,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,5,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,5,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,5,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,5,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,5,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,5,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,5,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,5,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,5,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,5,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,5,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,5,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,5,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,5,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,5,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,5,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,5,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,5,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,5,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,5,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,5,'filter',7,21,0,'ftr7 Filter type select bits');



INSERT INTO "tblAdcRegBits" VALUES(null,0,6,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,6,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,6,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,6,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,6,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,6,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,6,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,6,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,6,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,6,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,6,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,6,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,6,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,6,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,6,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,6,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,6,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,6,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,6,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,6,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,6,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,6,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,6,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,6,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,6,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,6,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,6,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,6,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,6,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,6,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,6,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,6,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,6,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,6,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,6,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,6,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,6,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,6,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,6,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,6,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,6,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,6,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,6,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,6,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,6,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,6,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,6,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,6,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,6,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,6,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,6,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,6,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,6,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,6,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,6,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,6,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,6,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,6,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,6,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,6,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,6,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,6,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,6,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,6,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,6,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,6,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,6,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,6,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,6,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,6,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,6,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,6,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,6,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,6,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,6,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,6,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,6,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,6,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,6,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,6,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,6,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,6,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,6,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,6,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,6,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,6,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,6,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,6,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,6,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,6,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,6,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,6,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,6,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,6,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,6,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,6,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,6,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,6,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,6,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,6,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,6,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,6,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,6,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,6,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,6,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,6,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,6,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,6,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,6,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,6,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,6,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,6,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,6,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,6,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,6,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,6,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,6,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,6,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,6,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,6,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,6,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,6,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,6,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,6,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,7,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,7,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,7,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,7,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,7,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,7,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,7,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,7,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,7,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,7,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,7,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,7,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,7,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,7,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,7,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,7,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,7,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,7,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,7,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,7,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,7,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,7,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,7,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,7,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,7,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,7,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,7,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,7,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,7,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,7,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,7,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,7,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,7,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,7,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,7,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,7,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,7,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,7,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,7,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,7,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,7,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,7,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,7,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,7,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,7,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,7,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,7,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,7,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,7,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,7,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,7,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,7,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,7,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,7,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,7,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,7,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,7,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,7,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,7,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,7,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,7,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,7,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,7,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,7,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,7,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,7,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,7,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,7,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,7,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,7,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,7,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,7,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,7,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,7,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,7,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,7,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,7,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,7,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,7,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,7,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,7,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,7,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,7,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,7,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,7,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,7,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,7,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,7,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,7,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,7,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,7,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,7,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,7,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,7,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,7,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,7,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,7,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,7,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,7,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,7,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,7,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,7,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,7,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,7,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,7,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,7,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,7,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,7,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,7,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,7,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,7,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,7,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,7,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,7,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,7,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,7,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,7,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,7,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,7,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,7,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,7,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,7,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,7,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,7,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,8,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,8,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,8,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,8,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,8,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,8,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,8,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,8,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,8,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,8,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,8,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,8,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,8,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,8,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,8,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,8,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,8,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,8,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,8,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,8,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,8,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,8,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,8,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,8,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,8,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,8,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,8,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,8,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,8,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,8,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,8,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,8,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,8,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,8,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,8,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,8,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,8,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,8,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,8,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,8,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,8,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,8,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,8,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,8,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,8,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,8,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,8,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,8,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,8,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,8,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,8,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,8,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,8,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,8,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,8,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,8,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,8,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,8,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,8,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,8,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,8,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,8,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,8,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,8,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,8,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,8,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,8,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,8,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,8,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,8,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,8,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,8,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,8,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,8,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,8,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,8,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,8,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,8,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,8,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,8,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,8,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,8,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,8,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,8,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,8,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,8,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,8,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,8,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,8,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,8,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,8,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,8,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,8,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,8,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,8,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,8,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,8,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,8,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,8,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,8,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,8,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,8,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,8,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,8,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,8,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,8,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,8,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,8,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,8,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,8,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,8,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,8,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,8,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,8,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,8,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,8,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,8,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,8,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,8,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,8,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,8,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,8,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,8,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,8,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,9,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,9,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,9,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,9,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,9,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,9,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,9,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,9,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,9,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,9,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,9,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,9,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,9,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,9,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,9,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,9,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,9,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,9,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,9,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,9,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,9,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,9,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,9,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,9,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,9,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,9,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,9,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,9,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,9,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,9,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,9,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,9,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,9,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,9,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,9,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,9,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,9,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,9,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,9,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,9,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,9,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,9,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,9,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,9,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,9,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,9,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,9,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,9,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,9,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,9,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,9,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,9,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,9,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,9,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,9,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,9,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,9,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,9,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,9,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,9,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,9,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,9,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,9,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,9,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,9,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,9,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,9,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,9,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,9,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,9,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,9,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,9,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,9,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,9,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,9,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,9,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,9,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,9,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,9,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,9,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,9,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,9,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,9,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,9,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,9,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,9,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,9,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,9,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,9,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,9,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,9,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,9,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,9,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,9,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,9,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,9,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,9,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,9,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,9,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,9,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,9,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,9,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,9,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,9,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,9,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,9,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,9,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,9,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,9,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,9,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,9,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,9,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,9,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,9,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,9,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,9,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,9,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,9,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,9,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,9,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,9,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,10,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,10,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,10,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,10,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,10,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,10,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,10,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,10,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,10,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,10,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,10,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,10,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,10,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,10,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,10,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,10,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,10,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,10,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,10,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,10,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,10,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,10,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,10,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,10,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,10,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,10,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,10,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,10,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,10,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,10,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,10,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,10,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,10,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,10,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,10,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,10,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,10,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,10,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,10,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,10,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,10,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,10,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,10,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,10,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,10,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,10,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,10,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,10,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,10,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,10,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,10,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,10,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,10,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,10,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,10,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,10,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,10,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,10,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,10,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,10,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,10,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,10,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,10,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,10,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,10,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,10,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,10,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,10,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,10,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,10,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,10,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,10,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,10,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,10,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,10,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,10,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,10,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,10,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,10,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,10,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,10,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,10,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,10,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,10,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,10,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,10,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,10,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,10,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,10,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,10,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,10,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,10,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,10,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,10,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,10,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,10,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,10,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,10,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,10,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,10,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,10,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,10,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,10,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,10,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,10,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,10,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,10,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,10,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,10,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,10,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,10,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,10,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,10,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,10,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,10,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,10,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,10,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,10,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,10,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,10,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,10,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,10,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,11,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,11,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,11,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,11,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,11,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,11,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,11,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,11,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,11,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,11,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,11,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,11,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,11,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,11,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,11,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,11,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,11,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,11,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,11,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,11,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,11,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,11,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,11,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,11,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,11,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,11,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,11,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,11,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,11,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,11,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,11,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,11,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,11,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,11,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,11,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,11,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,11,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,11,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,11,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,11,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,11,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,11,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,11,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,11,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,11,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,11,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,11,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,11,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,11,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,11,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,11,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,11,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,11,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,11,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,11,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,11,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,11,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,11,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,11,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,11,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,11,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,11,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,11,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,11,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,11,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,11,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,11,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,11,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,11,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,11,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,11,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,11,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,11,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,11,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,11,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,11,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,11,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,11,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,11,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,11,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,11,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,11,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,11,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,11,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,11,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,11,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,11,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,11,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,11,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,11,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,11,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,11,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,11,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,11,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,11,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,11,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,11,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,11,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,11,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,11,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,11,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,11,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,11,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,11,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,11,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,11,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,11,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,11,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,11,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,11,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,11,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,11,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,11,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,11,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,11,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,11,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,11,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,11,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,11,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,11,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,11,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,11,'filter',7,21,0,'ftr7 Filter type select bits');

INSERT INTO "tblAdcRegBits" VALUES(null,0,12,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,12,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO "tblAdcRegBits" VALUES(null,0,12,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO "tblAdcRegBits" VALUES(null,0,12,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'power_mode',3,6,2,'select the power mode');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO "tblAdcRegBits" VALUES(null,1,12,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO "tblAdcRegBits" VALUES(null,2,12,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO "tblAdcRegBits" VALUES(null,3,12,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO "tblAdcRegBits" VALUES(null,4,12,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO "tblAdcRegBits" VALUES(null,5,12,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,5,12,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'spi_clk_cnt_err',1,5,0,'number of SCLK cycles is not a multiple of eight');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO "tblAdcRegBits" VALUES(null,6,12,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'spi_write_err_en',1,3,1,'bit in the error register is set when an error occurs during a write operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'aldo_psm_trip_test_en',1,8,1,'the input to the test circuit is tied to AVS instead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'dldo_psm_trip_test_en',1,10,1,'the input to the test circuit is tied to DGND intead of the LDO output');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO "tblAdcRegBits" VALUES(null,7,12,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO "tblAdcRegBits" VALUES(null,8,12,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO "tblAdcRegBits" VALUES(null,9,12,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,12,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,9,12,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,9,12,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,10,12,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,12,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,10,12,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,10,12,'enable',1,15,0,'ch1 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,11,12,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,12,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,11,12,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,11,12,'enable',1,15,0,'ch2 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,12,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,12,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,12,12,'enable',1,15,0,'ch3 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,13,12,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,12,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,13,12,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,13,12,'enable',1,15,0,'ch4 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,14,12,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,12,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,14,12,'setup',7,12,0,'ch5 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,14,12,'enable',1,15,0,'ch5 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,15,12,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,12,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,15,12,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,15,12,'enable',1,15,0,'ch6 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,16,12,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,12,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,16,12,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,16,12,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,17,12,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,12,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,17,12,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,17,12,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,18,12,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,12,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,18,12,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,18,12,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,19,12,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,12,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,19,12,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,19,12,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,20,12,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,12,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,20,12,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,20,12,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,21,12,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,12,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,21,12,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,21,12,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,22,12,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,12,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,22,12,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,22,12,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,23,12,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,12,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,23,12,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,23,12,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,24,12,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,12,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO "tblAdcRegBits" VALUES(null,24,12,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO "tblAdcRegBits" VALUES(null,24,12,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,25,12,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,26,12,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,27,12,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,28,12,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,29,12,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,30,12,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,31,12,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO "tblAdcRegBits" VALUES(null,32,12,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,12,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,12,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,33,12,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,33,12,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,33,12,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,12,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,12,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,34,12,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,34,12,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,34,12,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,12,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,12,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,35,12,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,35,12,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,35,12,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,12,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,12,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,36,12,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,36,12,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,36,12,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,12,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,12,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,37,12,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,37,12,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,37,12,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,12,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,12,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,38,12,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,38,12,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,38,12,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,12,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,12,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,39,12,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,39,12,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,39,12,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,12,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,12,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO "tblAdcRegBits" VALUES(null,40,12,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO "tblAdcRegBits" VALUES(null,40,12,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO "tblAdcRegBits" VALUES(null,40,12,'filter',7,21,0,'ftr7 Filter type select bits');

CREATE TABLE IF NOT EXISTS "tblDacRegBits" (
	`PK_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`FK_PARENT_ID`	INTEGER NOT NULL,
        `DAC_NUM` INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO "tblDacRegBits" VALUES(1,1,1,'reset',1,0,0,'When set, it resets all registers except POC');
INSERT INTO "tblDacRegBits" VALUES(2,2,1,'ubt',1,0,0,'User Bit');
INSERT INTO "tblDacRegBits" VALUES(3,2,1,'poc',1,1,0,'Power-Off-Condition');
INSERT INTO "tblDacRegBits" VALUES(4,2,1,'clr',1,2,0,'Active high, clears all DAC registers to either zero or full scale based on CLSL bit.');
INSERT INTO "tblDacRegBits" VALUES(5,2,1,'trn',1,3,0,'Enable transparent mode');
INSERT INTO "tblDacRegBits" VALUES(6,2,1,'ref_en',1,4,0,'Internal reference enable/disable');
INSERT INTO "tblDacRegBits" VALUES(7,2,1,'clrena',1,9,0,'Clear Enable A');
INSERT INTO "tblDacRegBits" VALUES(8,2,1,'clrenb',1,10,0,'Clear Enable B');
INSERT INTO "tblDacRegBits" VALUES(9,2,1,'clrenc',1,11,0,' Clear Enable C');
INSERT INTO "tblDacRegBits" VALUES(10,2,1,'clrend',1,12,0,'Clear Enable D');
INSERT INTO "tblDacRegBits" VALUES(11,3,1,'wen',1,0,0,'Enable Watchdog Timer');
INSERT INTO "tblDacRegBits" VALUES(12,3,1,'wpd',1,1,0,'Watchdog Timer Period');
INSERT INTO "tblDacRegBits" VALUES(13,3,1,'cren',1,3,0,'Enable CRC');
INSERT INTO "tblDacRegBits" VALUES(14,3,1,'dsdo',1,4,1,'Disable SDO');
INSERT INTO "tblDacRegBits" VALUES(15,3,1,'cha',1,5,1,'Channel A selected');
INSERT INTO "tblDacRegBits" VALUES(16,3,1,'chb',1,6,1,'Channel B selected');
INSERT INTO "tblDacRegBits" VALUES(17,3,1,'chc',1,7,1,'Channel C selected');
INSERT INTO "tblDacRegBits" VALUES(18,3,1,'chd',1,8,1,'Channel D selected');
INSERT INTO "tblDacRegBits" VALUES(19,3,1,'clsla',1,9,0,'Clear Select A');
INSERT INTO "tblDacRegBits" VALUES(20,3,1,'clslb',1,10,0,' Clear Select B');
INSERT INTO "tblDacRegBits" VALUES(21,3,1,'clslc',1,11,0,'Clear Select C');
INSERT INTO "tblDacRegBits" VALUES(22,3,1,'clsld',1,12,0,'Clear Select D');
INSERT INTO "tblDacRegBits" VALUES(23,4,1,'range',15,0,6,'Range');
INSERT INTO "tblDacRegBits" VALUES(24,4,1,'sren',1,4,0,'Slew Rate Enabled');
INSERT INTO "tblDacRegBits" VALUES(25,4,1,'sr_step',7,5,0,'Slew Rate Step Size');
INSERT INTO "tblDacRegBits" VALUES(26,4,1,'srclk_rate',15,8,15,'Slew Clock Rate');
INSERT INTO "tblDacRegBits" VALUES(27,4,1,'oten',1,12,1,'Output Enabled');
INSERT INTO "tblDacRegBits" VALUES(28,4,1,'hten',1,13,0,'Enable HART');
INSERT INTO "tblDacRegBits" VALUES(29,4,1,'sclim',3,14,0,'Voltage output short circuit limit');
INSERT INTO "tblDacRegBits" VALUES(30,5,1,'dac_data',65535,0,0,'Dac data setting');
INSERT INTO "tblDacRegBits" VALUES(31,6,1,'dca',1,0,1,'Buck-Boost converter A selected');
INSERT INTO "tblDacRegBits" VALUES(32,6,1,'dcb',1,1,1,'Buck-Boost converter B selected');
INSERT INTO "tblDacRegBits" VALUES(33,6,1,'dcc',1,2,1,'Buck-Boost converter C selected');
INSERT INTO "tblDacRegBits" VALUES(34,6,1,'dcd',1,3,1,'Buck-Boost converter D selected');
INSERT INTO "tblDacRegBits" VALUES(35,7,1,'pnsel',3,0,1,'Enable Buck-Boost converter positive and negative arm');
INSERT INTO "tblDacRegBits" VALUES(36,7,1,'nclmp',15,2,7,'Buck-Boost converter negative clamp setting');
INSERT INTO "tblDacRegBits" VALUES(37,7,1,'pclmp',15,6,8,'Buck-Boost converter positive clamp setting');
INSERT INTO "tblDacRegBits" VALUES(38,7,1,'cclp',3,10,0,'Buck-Boost converter configurable clamp setting');
INSERT INTO "tblDacRegBits" VALUES(39,8,1,'clen',1,0,0,'Enable DAC calibration');
INSERT INTO "tblDacRegBits" VALUES(40,9,1,'ugain',65535,0,0,'16-bit user gain data');
INSERT INTO "tblDacRegBits" VALUES(41,10,1,'uoff',65535,0,0,'16-bit user offset data');
INSERT INTO "tblDacRegBits" VALUES(42,11,1,'fa',1,0,0,'Fault channel A - Indicates fault condition channel A');
INSERT INTO "tblDacRegBits" VALUES(43,11,1,'fb',1,1,0,'Fault channel B - Indicates fault condition channel B');
INSERT INTO "tblDacRegBits" VALUES(44,11,1,'fc',1,2,0,'Fault channel C - Indicates fault condition channel C');
INSERT INTO "tblDacRegBits" VALUES(45,11,1,'fd',1,3,0,'Fault channel D - Indicates fault condition channel D');
INSERT INTO "tblDacRegBits" VALUES(46,11,1,'tmp',1,4,0,'Indicates over temperature condition');
INSERT INTO "tblDacRegBits" VALUES(47,11,1,'cre',1,5,0,'Indicates CRC error condition');
INSERT INTO "tblDacRegBits" VALUES(48,11,1,'utgl',1,6,1,'User toggle - Copy of user bit (UBT)');
INSERT INTO "tblDacRegBits" VALUES(49,11,1,'pga',1,7,0,'Buck-Boost A power good');
INSERT INTO "tblDacRegBits" VALUES(50,11,1,'pgb',1,8,0,'Buck-Boost B power good');
INSERT INTO "tblDacRegBits" VALUES(51,11,1,'pgc',1,9,0,'Buck-Boost C power good');
INSERT INTO "tblDacRegBits" VALUES(52,11,1,'pgd',1,10,0,'Buck-Boost D power good');
INSERT INTO "tblDacRegBits" VALUES(53,11,1,'wdt',1,11,0,'Watchdog timer fault');
INSERT INTO "tblDacRegBits" VALUES(54,11,1,'clst',1,12,0,'Indicates that Auto Learn operation is finished');
INSERT INTO "tblDacRegBits" VALUES(55,12,1,'mfa',1,0,0,'masks the alarm pin from fault condition on channel A');
INSERT INTO "tblDacRegBits" VALUES(56,12,1,'mfb',1,1,0,'masks the alarm pin from fault condition on channel B');
INSERT INTO "tblDacRegBits" VALUES(57,12,1,'mfc',1,2,0,'masks the alarm pin from fault condition on channel C');
INSERT INTO "tblDacRegBits" VALUES(58,12,1,'mfd',1,3,0,'masks the alarm pin from fault condition on channel d');
INSERT INTO "tblDacRegBits" VALUES(59,12,1,'mtmp',1,4,0,'masks the alarm pin from over temperature condition');
INSERT INTO "tblDacRegBits" VALUES(60,12,1,'mcre',1,5,0,'masks the alarm pin from CRC error condition');
INSERT INTO "tblDacRegBits" VALUES(61,12,1,'mwt',1,11,0,'masks the alarm pin from watchdog timer fault condition');
INSERT INTO "tblDacRegBits" VALUES(62,13,1,'ac_tmp',3,0,0,'Action over temperature condition');
INSERT INTO "tblDacRegBits" VALUES(63,13,1,'ac_vsc',3,2,0,'Action voltage output short circuit condition');
INSERT INTO "tblDacRegBits" VALUES(64,13,1,'ac_ioc',3,4,0,'Action current output open circuit condition');
INSERT INTO "tblDacRegBits" VALUES(65,13,1,'ac_cre_wdt',3,6,0,'Action CRC');
INSERT INTO "tblDacRegBits" VALUES(66,14,1,'bit8',1,8,0,'no information');
INSERT INTO "tblDacRegBits" VALUES(67,14,1,'hsclmp',1,9,0,'Buck-Boost positive output high side clamp');
INSERT INTO "tblDacRegBits" VALUES(68,14,1,'acode',61,10,0,'6 bit alarm code data');
INSERT INTO "tblDacRegBits" VALUES(69,15,1,'reserved',65535,0,0,'Reserved');
INSERT INTO "tblDacRegBits" VALUES(70,16,1,'rwd',1,0,0,'Reset watchdog timer');
INSERT INTO "tblDacRegBits" VALUES(71,17,1,'did',7,0,0,'3-bit device identification code');

INSERT INTO "tblDacRegBits" VALUES(null,1,2,'reset',1,0,0,'When set, it resets all registers except POC');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'ubt',1,0,0,'User Bit');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'poc',1,1,0,'Power-Off-Condition');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'clr',1,2,0,'Active high, clears all DAC registers to either zero or full scale based on CLSL bit.');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'trn',1,3,0,'Enable transparent mode');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'ref_en',1,4,0,'Internal reference enable/disable');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'clrena',1,9,0,'Clear Enable A');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'clrenb',1,10,0,'Clear Enable B');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'clrenc',1,11,0,'Clear Enable C');
INSERT INTO "tblDacRegBits" VALUES(null,2,2,'clrend',1,12,0,'Clear Enable D');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'wen',1,0,0,'Enable Watchdog Timer');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'wpd',1,1,0,'Watchdog Timer Period');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'cren',1,3,0,'Enable CRC');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'dsdo',1,4,1,'Disable SDO');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'cha',1,5,1,'Channel A selected');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'chb',1,6,1,'Channel B selected');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'chc',1,7,1,'Channel C selected');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'chd',1,8,1,'Channel D selected');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'clsla',1,9,0,'Clear Select A');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'clslb',1,10,0,'Clear Select B');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'clslc',1,11,0,'Clear Select C');
INSERT INTO "tblDacRegBits" VALUES(null,3,2,'clsld',1,12,0,'Clear Select D');
INSERT INTO "tblDacRegBits" VALUES(null,4,2,'range',15,0,6,'Range');
INSERT INTO "tblDacRegBits" VALUES(null,4,2,'sren',1,4,0,'Slew Rate Enabled');
INSERT INTO "tblDacRegBits" VALUES(null,4,2,'sr_step',7,5,0,'Slew Rate Step Size');
INSERT INTO "tblDacRegBits" VALUES(null,4,2,'srclk_rate',15,8,15,'Slew Clock Rate');
INSERT INTO "tblDacRegBits" VALUES(null,4,2,'oten',1,12,1,'Output Enabled');
INSERT INTO "tblDacRegBits" VALUES(null,4,2,'hten',1,13,0,'Enable HART');
INSERT INTO "tblDacRegBits" VALUES(null,4,2,'sclim',3,14,0,'Voltage output short circuit limit');
INSERT INTO "tblDacRegBits" VALUES(null,5,2,'dac_data',65535,0,0,'Dac data setting');
INSERT INTO "tblDacRegBits" VALUES(null,6,2,'dca',1,0,1,'Buck-Boost converter A selected');
INSERT INTO "tblDacRegBits" VALUES(null,6,2,'dcb',1,1,1,'Buck-Boost converter B selected');
INSERT INTO "tblDacRegBits" VALUES(null,6,2,'dcc',1,2,1,'Buck-Boost converter C selected');
INSERT INTO "tblDacRegBits" VALUES(null,6,2,'dcd',1,3,1,'Buck-Boost converter D selected');
INSERT INTO "tblDacRegBits" VALUES(null,7,2,'pnsel',3,0,1,'Enable Buck-Boost converter positive and negative arm');
INSERT INTO "tblDacRegBits" VALUES(null,7,2,'nclmp',15,2,7,'Buck-Boost converter negative clamp setting');
INSERT INTO "tblDacRegBits" VALUES(null,7,2,'pclmp',15,6,8,'Buck-Boost converter positive clamp setting');
INSERT INTO "tblDacRegBits" VALUES(null,7,2,'cclp',3,10,0,'Buck-Boost converter configurable clamp setting');
INSERT INTO "tblDacRegBits" VALUES(null,8,2,'clen',1,0,0,'Enable DAC calibration');
INSERT INTO "tblDacRegBits" VALUES(null,9,2,'ugain',65535,0,0,'16-bit user gain data');
INSERT INTO "tblDacRegBits" VALUES(null,10,2,'uoff',65535,0,0,'16-bit user offset data');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'fa',1,0,0,'Fault channel A - Indicates fault condition channel A');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'fb',1,1,0,'Fault channel B - Indicates fault condition channel B');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'fc',1,2,0,'Fault channel C - Indicates fault condition channel C');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'fd',1,3,0,'Fault channel D - Indicates fault condition channel D');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'tmp',1,4,0,'Indicates over temperature condition');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'cre',1,5,0,'Indicates CRC error condition');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'utgl',1,6,1,'User toggle - Copy of user bit (UBT)');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'pga',1,7,0,'Buck-Boost A power good');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'pgb',1,8,0,'Buck-Boost B power good');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'pgc',1,9,0,'Buck-Boost C power good');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'pgd',1,10,0,'Buck-Boost D power good');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'wdt',1,11,0,'Watchdog timer fault');
INSERT INTO "tblDacRegBits" VALUES(null,11,2,'clst',1,12,0,'Indicates that Auto Learn operation is finished');
INSERT INTO "tblDacRegBits" VALUES(null,12,2,'mfa',1,0,0,'masks the alarm pin from fault condition on channel A');
INSERT INTO "tblDacRegBits" VALUES(null,12,2,'mfb',1,1,0,'masks the alarm pin from fault condition on channel B');
INSERT INTO "tblDacRegBits" VALUES(null,12,2,'mfc',1,2,0,'masks the alarm pin from fault condition on channel C');
INSERT INTO "tblDacRegBits" VALUES(null,12,2,'mfd',1,3,0,'masks the alarm pin from fault condition on channel d');
INSERT INTO "tblDacRegBits" VALUES(null,12,2,'mtmp',1,4,0,'masks the alarm pin from over temperature condition');
INSERT INTO "tblDacRegBits" VALUES(null,12,2,'mcre',1,5,0,'masks the alarm pin from CRC error condition');
INSERT INTO "tblDacRegBits" VALUES(null,12,2,'mwt',1,11,0,'masks the alarm pin from watchdog timer fault condition');
INSERT INTO "tblDacRegBits" VALUES(null,13,2,'ac_tmp',3,0,0,'Action over temperature condition');
INSERT INTO "tblDacRegBits" VALUES(null,13,2,'ac_vsc',3,2,0,'Action voltage output short circuit condition');
INSERT INTO "tblDacRegBits" VALUES(null,13,2,'ac_ioc',3,4,0,'Action current output open circuit condition');
INSERT INTO "tblDacRegBits" VALUES(null,13,2,'ac_cre_wdt',3,6,0,'Action CRC');
INSERT INTO "tblDacRegBits" VALUES(null,14,2,'bit8',1,8,0,'no information');
INSERT INTO "tblDacRegBits" VALUES(null,14,2,'hsclmp',1,9,0,'Buck-Boost positive output high side clamp');
INSERT INTO "tblDacRegBits" VALUES(null,14,2,'acode',61,10,0,'6 bit alarm code data');
INSERT INTO "tblDacRegBits" VALUES(null,15,2,'reserved',65535,0,0,'Reserved');
INSERT INTO "tblDacRegBits" VALUES(null,16,2,'rwd',1,0,0,'Reset watchdog timer');
INSERT INTO "tblDacRegBits" VALUES(null,17,2,'did',7,0,0,'3-bit device identification code');
CREATE TABLE IF NOT EXISTS "tblADS1015Registers" (
	`NAME`	TEXT NOT NULL,
	`ADDRESS`	INTEGER NOT NULL,
	`DEFAULT`	INTEGER NOT NULL,
	`BYTES`	INTEGER NOT NULL,
	`READ`	INTEGER NOT NULL,
	`WRITE`	INTEGER NOT NULL
);
INSERT INTO "tblADS1015Registers" VALUES('Conversion',0,0,2,1,0);
INSERT INTO "tblADS1015Registers" VALUES('Config',1,34179,2,1,1);
INSERT INTO "tblADS1015Registers" VALUES('Lo_thresh',2,32768,2,1,1);
INSERT INTO "tblADS1015Registers" VALUES('Hi_thresh',3,32767,2,1,1);
CREATE TABLE IF NOT EXISTS "tblADS1015RegBits" ( `PK_ID` INTEGER PRIMARY KEY AUTOINCREMENT, `FK_PARENT_ID` INTEGER NOT NULL, `NAME` TEXT NOT NULL, `MASK` INTEGER NOT NULL, `SHIFT` INTEGER NOT NULL, `VALUE` INTEGER NOT NULL, `DESCRIPTION` TEXT );
INSERT INTO "tblADS1015RegBits" VALUES(1,0,'reserved',7,0,0,'Reserved');
INSERT INTO "tblADS1015RegBits" VALUES(2,0,'data',4095,4,0,'Conversion Data');
INSERT INTO "tblADS1015RegBits" VALUES(3,1,'comp_que',3,0,3,'Comparator queue and disable');
INSERT INTO "tblADS1015RegBits" VALUES(4,1,'comp_lat',1,2,0,'Latching comparator');
INSERT INTO "tblADS1015RegBits" VALUES(5,1,'comp_pol',1,3,0,'Comparator polarity');
INSERT INTO "tblADS1015RegBits" VALUES(6,1,'comp_mode',1,4,0,'Comparator mode');
INSERT INTO "tblADS1015RegBits" VALUES(7,1,'dr',7,5,4,'Data rate');
INSERT INTO "tblADS1015RegBits" VALUES(8,1,'mode',1,8,0,'Device operating mode');
INSERT INTO "tblADS1015RegBits" VALUES(9,1,'pga',7,9,2,'Programmable gain amplifier configuration');
INSERT INTO "tblADS1015RegBits" VALUES(10,1,'mux',7,12,0,'Input multiplexer configuration');
INSERT INTO "tblADS1015RegBits" VALUES(11,1,'os',1,15,1,'Operational status or single-shot conversion start');
INSERT INTO "tblADS1015RegBits" VALUES(12,2,'reserved',7,0,0,'Reserved');
INSERT INTO "tblADS1015RegBits" VALUES(13,2,'lo_thresh',4095,4,0,'Lo_threshold');
INSERT INTO "tblADS1015RegBits" VALUES(14,3,'reserved',7,0,2048,'Reserved');
INSERT INTO "tblADS1015RegBits" VALUES(15,3,'hi_thresh',4095,4,2047,'Hi_threshould');
CREATE TABLE IF NOT EXISTS "tblAdcParams" (
	`PK_ADC_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`temperature_unit`	INTEGER NOT NULL,
	`sensor_type`	INTEGER NOT NULL,
	`gain`	INTEGER NOT NULL
);
INSERT INTO "tblAdcParams" VALUES(1,0,2,16);
INSERT INTO "tblAdcParams" VALUES(2,0,2,16);
INSERT INTO "tblAdcParams" VALUES(3,0,2,16);
INSERT INTO "tblAdcParams" VALUES(4,0,2,16);
INSERT INTO "tblAdcParams" VALUES(5,0,2,16);
INSERT INTO "tblAdcParams" VALUES(6,0,2,16);
INSERT INTO "tblAdcParams" VALUES(7,0,2,16);
INSERT INTO "tblAdcParams" VALUES(8,0,2,16);
INSERT INTO "tblAdcParams" VALUES(9,0,2,16);
INSERT INTO "tblAdcParams" VALUES(10,0,2,16);
INSERT INTO "tblAdcParams" VALUES(11,0,2,16);
INSERT INTO "tblAdcParams" VALUES(12,0,2,16);
DELETE FROM sqlite_sequence;
INSERT INTO "sqlite_sequence" VALUES('tblTlmDictionary',2);
INSERT INTO "sqlite_sequence" VALUES('tblSmbCmds',38);
INSERT INTO "sqlite_sequence" VALUES('tblHtrParams',2);
INSERT INTO "sqlite_sequence" VALUES('tblAdcRegBits',2904);
INSERT INTO "sqlite_sequence" VALUES('tblDacRegBits',142);
INSERT INTO "sqlite_sequence" VALUES('tblSmbParams',2);
INSERT INTO "sqlite_sequence" VALUES('tblSensorData',3);
INSERT INTO "sqlite_sequence" VALUES('tblADS1015RegBits',15);
INSERT INTO "sqlite_sequence" VALUES('tblAdcParams',12);
COMMIT;

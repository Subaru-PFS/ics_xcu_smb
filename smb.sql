PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "tblTlmDictionary" (
	`PK_TLM_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`TLM_NAME`	TEXT NOT NULL UNIQUE,
	`LO_YELLOW`	REAL NOT NULL,
	`HI_YELLOW`	REAL NOT NULL,
	`LO_RED`	REAL NOT NULL,
	`HI_RED`	REAL NOT NULL,
	`USED`	INTEGER,
	`Description`	TEXT
);
INSERT INTO tblTlmDictionary VALUES(1,'T1',35.0,40.0,304.99999999999999999,309.99999999999999999,1,'RTD1');
INSERT INTO tblTlmDictionary VALUES(2,'T2',35.0,40.0,304.99999999999999999,309.99999999999999999,1,'RTD2');
CREATE TABLE IF NOT EXISTS "tblSmbCmds" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`READ`	INTEGER,
	`WRITE`	INTEGER,
	`CMD`	TEXT NOT NULL UNIQUE,
	`P1_DEF`	INTEGER NOT NULL,
	`P1_MIN`	INTEGER NOT NULL,
	`P1_MAX`	INTEGER NOT NULL,
	`P2_DEF`	REAL NOT NULL,
	`P2_MIN`	REAL NOT NULL,
	`P2_MAX`	REAL NOT NULL,
	`RETURNS`	TEXT NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblSmbCmds VALUES(1,1,1,'A',0,0,65535,0.0,0.0,0.0,'uint8','Write/read Board ID');
INSERT INTO tblSmbCmds VALUES(4,1,1,'D',1,1,2,0.0,0.0,100.0,'uint8','PID Derivative D factor');
INSERT INTO tblSmbCmds VALUES(5,0,1,'E',0,0,0,0.0,0.0,0.0,'uint8','Reset CPU');
INSERT INTO tblSmbCmds VALUES(6,1,1,'F',1,1,2,1.0,0.0,1.0,'uint8','Switched High Power output');
INSERT INTO tblSmbCmds VALUES(8,1,0,'H',0,0,0,0.0,0.0,100.0,'double','Read Humidity Sensor (Humidity : Temp)');
INSERT INTO tblSmbCmds VALUES(9,1,1,'I',1,1,2,0.0,0.0,100.0,'double','PID Integral I factor');
INSERT INTO tblSmbCmds VALUES(10,1,1,'J',1,1,2,1.0,1.0,12.0,'uint8','Loop control sensor#');
INSERT INTO tblSmbCmds VALUES(11,1,0,'K',1,1,12,0.0,0.0,10000.0,'double','Read sensor temperature');
INSERT INTO tblSmbCmds VALUES(12,1,1,'L',1,1,2,0.0,0.0,2.0,'uint8','Htr Amp status(0=Disabled, 1=Fixed Percent, 2=PID Control)');
INSERT INTO tblSmbCmds VALUES(14,1,1,'N',0,0,255,0.0,0.0,254.99999999999999999,'uint8','Read the software revision');
INSERT INTO tblSmbCmds VALUES(16,1,1,'P',1,1,3,0.0,0.0,100.0,'double','PID Proportional P factor');
INSERT INTO tblSmbCmds VALUES(17,1,1,'Q',1,1,12,0.0,0.0,7.0,'uint8','ADC Filter Setting');
INSERT INTO tblSmbCmds VALUES(18,1,1,'R',1,1,12,10000.0,0.0,100000.0,'double','Thermistor Resistance @25C');
INSERT INTO tblSmbCmds VALUES(19,1,1,'S',1,1,12,1.0,1.0,3.0,'uint8','Sensor Type (0=RAW;1=DT670;2=THERMISTOR;3=RTD)');
INSERT INTO tblSmbCmds VALUES(21,1,1,'U',1,1,12,0.0,0.2,0,'uint8','Temperature Units (0=K;1=C;2=F)');
INSERT INTO tblSmbCmds VALUES(22,1,1,'V',1,1,2,0.0,0.0,100.0,'double','Heater Current (percent)');
INSERT INTO tblSmbCmds VALUES(23,1,1,'W',1,1,2,-459.99999999999999999,0.0,500.0,'double','LOOP SetPoint (SP)');
INSERT INTO tblSmbCmds VALUES(24,1,1,'X',1,1,12,0.0,0.0,5.0,'uint8','Excitation current (0=50μA, 1=100μA, 2=250μA, 3=500μA, 4=750μA, 5=1mA)');
INSERT INTO tblSmbCmds VALUES(34,1,0,'i',1,1,2,0.0,0.0,0.0,'uint8','Read Heater Current');
INSERT INTO tblSmbCmds VALUES(36,1,0,'t',0,0,0,0.0,0.0,0.0,'string','Read all temp sensors');
INSERT INTO tblSmbCmds VALUES(37,1,0,'r',0,0,0,0.0,0.0,0.0,'string','Read all sensor resistances');
INSERT INTO tblSmbCmds VALUES(38,1,0,'v',0,0,0,0.0,0.0,0.0,'string','Read voltage at sensor');
CREATE TABLE IF NOT EXISTS "tblDacRegisters" (
	`NAME`	TEXT NOT NULL,
	`ADDRESS`	INTEGER NOT NULL UNIQUE,
	`DEFAULT`	INTEGER NOT NULL,
	`PER_CHAN`	INTEGER NOT NULL,
	`READ`	INTEGER NOT NULL,
	`WRITE`	INTEGER
);
INSERT INTO tblDacRegisters VALUES('no_operation',0,0,0,0,1);
INSERT INTO tblDacRegisters VALUES('reset',1,0,0,1,1);
INSERT INTO tblDacRegisters VALUES('reset_config',2,0,0,1,1);
INSERT INTO tblDacRegisters VALUES('select_dac',3,0,0,1,1);
INSERT INTO tblDacRegisters VALUES('configuration_dac',4,0,1,1,1);
INSERT INTO tblDacRegisters VALUES('DAC_data',5,0,1,1,1);
INSERT INTO tblDacRegisters VALUES('Select_Buck_Boost_converter',6,0,0,1,1);
INSERT INTO tblDacRegisters VALUES('configuration_Buck_Boost_converter',7,0,1,1,1);
INSERT INTO tblDacRegisters VALUES('dac_channel_calibration_enable',8,0,1,1,1);
INSERT INTO tblDacRegisters VALUES('dac_channel_gain_calibration',9,0,1,1,1);
INSERT INTO tblDacRegisters VALUES('dac_channel_offset_calibration',10,0,1,1,1);
INSERT INTO tblDacRegisters VALUES('status',11,4096,0,1,1);
INSERT INTO tblDacRegisters VALUES('status_mask',12,0,0,1,1);
INSERT INTO tblDacRegisters VALUES('alarm_action',13,0,0,1,1);
INSERT INTO tblDacRegisters VALUES('user_alarm_code',14,0,1,1,1);
INSERT INTO tblDacRegisters VALUES('reserved',15,0,1,0,0);
INSERT INTO tblDacRegisters VALUES('write_watchdog_timer_reset',16,0,0,1,1);
INSERT INTO tblDacRegisters VALUES('device_ID',17,0,0,1,1);
CREATE TABLE IF NOT EXISTS "tblHtrParams" (
	`PK_HTR_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`P`	REAL NOT NULL,
	`I`	REAL NOT NULL,
	`D`	REAL NOT NULL,
	`set_pt`	REAL NOT NULL,
	`ctrl_sensor`	INTEGER NOT NULL,
	`mode`	INTEGER NOT NULL,
	`htr_current`	REAL NOT NULL
);
INSERT INTO tblHtrParams VALUES(1,1.0,2.0,3.0,279.99999999999999999,4,0,0.096000000000000001998);
INSERT INTO tblHtrParams VALUES(2,10.0,2.5499999999999998223,2.0,139.99999999999999999,4,1,0.00096000000000000002432);
CREATE TABLE IF NOT EXISTS "tblAdcRegisters" (
	`NAME`	TEXT NOT NULL,
	`ADDRESS`	INTEGER NOT NULL,
	`DEFAULT`	INTEGER NOT NULL,
	`BYTES`	INTEGER NOT NULL,
	`READ`	INTEGER NOT NULL,
	`WRITE`	INTEGER NOT NULL,
	PRIMARY KEY(`ADDRESS`)
);
INSERT INTO tblAdcRegisters VALUES('Status',0,0,1,1,1);
INSERT INTO tblAdcRegisters VALUES('ADC_Control',1,0,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Data',2,0,3,1,1);
INSERT INTO tblAdcRegisters VALUES('IOCon1',3,0,3,1,1);
INSERT INTO tblAdcRegisters VALUES('IOCon2',4,0,2,1,1);
INSERT INTO tblAdcRegisters VALUES('ID',5,18,1,1,1);
INSERT INTO tblAdcRegisters VALUES('Error',6,0,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Error_En',7,1024,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Mclk_Count',8,0,1,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_0',9,32769,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_1',10,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_2',11,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_3',12,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_4',13,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_5',14,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_6',15,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_7',16,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_8',17,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_9',18,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_10',19,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_11',20,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_12',21,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_13',22,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_14',23,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Channel_15',24,1,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_0',25,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_1',26,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_2',27,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_3',28,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_4',29,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_5',30,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_6',31,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Config_7',32,2144,2,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_0',33,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_1',34,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_2',35,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_3',36,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_4',37,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_5',38,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_6',39,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Filter_7',40,393600,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_0',41,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_1',42,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_2',43,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_3',44,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_4',45,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_5',46,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_6',47,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Offset_7',48,8388608,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_0',49,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_1',50,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_2',51,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_3',52,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_4',53,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_5',54,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_6',55,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('Gain_7',56,5242880,3,1,1);
INSERT INTO tblAdcRegisters VALUES('reset',255,5242880,3,1,1);
CREATE TABLE IF NOT EXISTS "tblAdcRegBits1" (
	`PK_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits1 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits1 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits1 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits1 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits1 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits1 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits1 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits1 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits1 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits1 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits1 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits1 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits1 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits1 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits1 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits1 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits1 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits1 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits1 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits1 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits1 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits1 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits1 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits1 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits1 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits1 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits1 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits1 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits1 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits1 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits1 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits1 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits1 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits1 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits1 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits1 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits1 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits1 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits1 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits1 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits1 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits1 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits1 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits1 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits1 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits1 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits1 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits1 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits1 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits1 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits1 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits1 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits1 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits1 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits1 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits1 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits1 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits1 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits1 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits1 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits1 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits1 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits1 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits1 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits1 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits1 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits1 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits1 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits1 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits1 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits1 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits1 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits1 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits1 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits1 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits1 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits1 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits1 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits1 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits1 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits1 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits1 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits1 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits1 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits1 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits1 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits1 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(207,33,'filter',7,21,0,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(212,34,'filter',7,21,0,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(217,35,'filter',7,21,0,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(222,36,'filter',7,21,0,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(227,37,'filter',7,21,0,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(232,38,'filter',7,21,0,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(237,39,'filter',7,21,0,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits1 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits1 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits1 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits1 VALUES(242,40,'filter',7,21,0,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblDacRegBits1" (
	`PK_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblDacRegBits1 VALUES(1,1,'reset',1,0,0,'When set, it resets all registers except POC');
INSERT INTO tblDacRegBits1 VALUES(2,2,'ubt',1,0,0,'User Bit');
INSERT INTO tblDacRegBits1 VALUES(3,2,'poc',1,1,0,'Power-Off-Condition');
INSERT INTO tblDacRegBits1 VALUES(4,2,'clr',1,2,0,replace('Active high, clears all DAC registers to either zero or full scale\nbased on CLSL bit.','\n',char(10)));
INSERT INTO tblDacRegBits1 VALUES(5,2,'trn',1,3,0,'Enable transparent mode');
INSERT INTO tblDacRegBits1 VALUES(6,2,'ref_en',1,4,0,'Internal reference enable/disable');
INSERT INTO tblDacRegBits1 VALUES(7,2,'clrena',1,9,0,'Clear Enable A');
INSERT INTO tblDacRegBits1 VALUES(8,2,'clrenb',1,10,0,'Clear Enable B');
INSERT INTO tblDacRegBits1 VALUES(9,2,'clrenc',1,11,0,' Clear Enable C');
INSERT INTO tblDacRegBits1 VALUES(10,2,'clrend',1,12,0,'Clear Enable D');
INSERT INTO tblDacRegBits1 VALUES(11,3,'wen',1,0,0,'Enable Watchdog Timer');
INSERT INTO tblDacRegBits1 VALUES(12,3,'wpd',1,1,0,'Watchdog Timer Period');
INSERT INTO tblDacRegBits1 VALUES(13,3,'cren',1,3,0,'Enable CRC');
INSERT INTO tblDacRegBits1 VALUES(14,3,'dsdo',1,4,1,'Disable SDO');
INSERT INTO tblDacRegBits1 VALUES(15,3,'cha',1,5,1,'Channel A selected');
INSERT INTO tblDacRegBits1 VALUES(16,3,'chb',1,6,1,'Channel B selected');
INSERT INTO tblDacRegBits1 VALUES(17,3,'chc',1,7,1,'Channel C selected');
INSERT INTO tblDacRegBits1 VALUES(18,3,'chd',1,8,1,'Channel D selected');
INSERT INTO tblDacRegBits1 VALUES(19,3,'clsla',1,9,0,'Clear Select A');
INSERT INTO tblDacRegBits1 VALUES(20,3,'clslb',1,10,0,' Clear Select B');
INSERT INTO tblDacRegBits1 VALUES(21,3,'clslc',1,11,0,'Clear Select C');
INSERT INTO tblDacRegBits1 VALUES(22,3,'clsld',1,12,0,'Clear Select D');
INSERT INTO tblDacRegBits1 VALUES(23,4,'range',15,0,6,'Range');
INSERT INTO tblDacRegBits1 VALUES(24,4,'sren',1,4,0,'Slew Rate Enabled');
INSERT INTO tblDacRegBits1 VALUES(25,4,'sr_step',7,5,0,'Slew Rate Step Size');
INSERT INTO tblDacRegBits1 VALUES(26,4,'srclk_rate',15,8,15,'Slew Clock Rate');
INSERT INTO tblDacRegBits1 VALUES(27,4,'oten',1,12,1,'Output Enabled');
INSERT INTO tblDacRegBits1 VALUES(28,4,'hten',1,13,0,'Enable HART');
INSERT INTO tblDacRegBits1 VALUES(29,4,'sclim',3,14,0,'Voltage output short circuit limit');
INSERT INTO tblDacRegBits1 VALUES(30,5,'dac_data',65535,0,0,'Dac data setting');
INSERT INTO tblDacRegBits1 VALUES(31,6,'dca',1,0,1,'Buck-Boost converter A selected');
INSERT INTO tblDacRegBits1 VALUES(32,6,'dcb',1,1,1,'Buck-Boost converter B selected');
INSERT INTO tblDacRegBits1 VALUES(33,6,'dcc',1,2,1,'Buck-Boost converter C selected');
INSERT INTO tblDacRegBits1 VALUES(34,6,'dcd',1,3,1,'Buck-Boost converter D selected');
INSERT INTO tblDacRegBits1 VALUES(35,7,'pnsel',3,0,1,'Enable Buck-Boost converter positive and negative arm');
INSERT INTO tblDacRegBits1 VALUES(36,7,'nclmp',15,2,7,'Buck-Boost converter negative clamp setting');
INSERT INTO tblDacRegBits1 VALUES(37,7,'pclmp',15,6,8,'Buck-Boost converter positive clamp setting');
INSERT INTO tblDacRegBits1 VALUES(38,7,'cclp',3,10,0,'Buck-Boost converter configurable clamp setting');
INSERT INTO tblDacRegBits1 VALUES(39,8,'clen',1,0,0,'Enable DAC calibration');
INSERT INTO tblDacRegBits1 VALUES(40,9,'ugain',65535,0,0,'16-bit user gain data');
INSERT INTO tblDacRegBits1 VALUES(41,10,'uoff',65535,0,0,'16-bit user offset data');
INSERT INTO tblDacRegBits1 VALUES(42,11,'fa',1,0,0,'Fault channel A - Indicates fault condition channel A');
INSERT INTO tblDacRegBits1 VALUES(43,11,'fb',1,1,0,'Fault channel B - Indicates fault condition channel B');
INSERT INTO tblDacRegBits1 VALUES(44,11,'fc',1,2,0,'Fault channel C - Indicates fault condition channel C');
INSERT INTO tblDacRegBits1 VALUES(45,11,'fd',1,3,0,'Fault channel D - Indicates fault condition channel D');
INSERT INTO tblDacRegBits1 VALUES(46,11,'tmp',1,4,0,'Indicates over temperature condition');
INSERT INTO tblDacRegBits1 VALUES(47,11,'cre',1,5,0,'Indicates CRC error condition');
INSERT INTO tblDacRegBits1 VALUES(48,11,'utgl',1,6,1,'User toggle - Copy of user bit (UBT)');
INSERT INTO tblDacRegBits1 VALUES(49,11,'pga',1,7,0,'Buck-Boost A power good');
INSERT INTO tblDacRegBits1 VALUES(50,11,'pgb',1,8,0,'Buck-Boost B power good');
INSERT INTO tblDacRegBits1 VALUES(51,11,'pgc',1,9,0,'Buck-Boost C power good');
INSERT INTO tblDacRegBits1 VALUES(52,11,'pgd',1,10,0,'Buck-Boost D power good');
INSERT INTO tblDacRegBits1 VALUES(53,11,'wdt',1,11,0,'Watchdog timer fault');
INSERT INTO tblDacRegBits1 VALUES(54,11,'clst',1,12,0,replace('Indicates that Auto Learn operation is\nfinished','\n',char(10)));
INSERT INTO tblDacRegBits1 VALUES(55,12,'mfa',1,0,0,'masks the alarm pin from fault condition on channel A');
INSERT INTO tblDacRegBits1 VALUES(56,12,'mfb',1,1,0,'masks the alarm pin from fault condition on channel B');
INSERT INTO tblDacRegBits1 VALUES(57,12,'mfc',1,2,0,'masks the alarm pin from fault condition on channel C');
INSERT INTO tblDacRegBits1 VALUES(58,12,'mfd',1,3,0,'masks the alarm pin from fault condition on channel d');
INSERT INTO tblDacRegBits1 VALUES(59,12,'mtmp',1,4,0,replace('masks the alarm pin from over\ntemperature condition','\n',char(10)));
INSERT INTO tblDacRegBits1 VALUES(60,12,'mcre',1,5,0,replace('masks the alarm pin from CRC error\ncondition','\n',char(10)));
INSERT INTO tblDacRegBits1 VALUES(61,12,'mwt',1,11,0,replace('masks the alarm pin from watchdog\ntimer fault condition','\n',char(10)));
INSERT INTO tblDacRegBits1 VALUES(62,13,'ac_tmp',3,0,0,'Action over temperature condition');
INSERT INTO tblDacRegBits1 VALUES(63,13,'ac_vsc',3,2,0,'Action voltage output short circuit condition');
INSERT INTO tblDacRegBits1 VALUES(64,13,'ac_ioc',3,4,0,'Action current output open circuit condition');
INSERT INTO tblDacRegBits1 VALUES(65,13,'ac_cre_wdt',3,6,0,'Action CRC');
INSERT INTO tblDacRegBits1 VALUES(66,14,'bit8',1,8,0,'no information');
INSERT INTO tblDacRegBits1 VALUES(67,14,'hsclmp',1,9,0,'Buck-Boost positive output high side clamp');
INSERT INTO tblDacRegBits1 VALUES(68,14,'acode',61,10,0,'6 bit alarm code data');
INSERT INTO tblDacRegBits1 VALUES(69,15,'reserved',65535,0,0,'Reserved');
INSERT INTO tblDacRegBits1 VALUES(70,16,'rwd',1,0,0,'Reset watchdog timer');
INSERT INTO tblDacRegBits1 VALUES(71,17,'did',7,0,0,'3-bit device identification code');
CREATE TABLE IF NOT EXISTS "tblDacRegBits2" (
	`PK_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT NOT NULL
);
INSERT INTO tblDacRegBits2 VALUES(1,1,'reset',1,0,0,'When set, it resets all registers except POC');
INSERT INTO tblDacRegBits2 VALUES(2,2,'ubt',1,0,0,'User Bit');
INSERT INTO tblDacRegBits2 VALUES(3,2,'poc',1,1,0,'Power-Off-Condition');
INSERT INTO tblDacRegBits2 VALUES(4,2,'clr',1,2,0,replace('Active high, clears all DAC registers to either zero or full scale\nbased on CLSL bit.','\n',char(10)));
INSERT INTO tblDacRegBits2 VALUES(5,2,'trn',1,3,0,'Enable transparent mode');
INSERT INTO tblDacRegBits2 VALUES(6,2,'ref_en',1,4,0,'Internal reference enable/disable');
INSERT INTO tblDacRegBits2 VALUES(7,2,'clrena',1,9,0,'Clear Enable A');
INSERT INTO tblDacRegBits2 VALUES(8,2,'clrenb',1,10,0,'Clear Enable B');
INSERT INTO tblDacRegBits2 VALUES(9,2,'clrenc',1,11,0,'Clear Enable C');
INSERT INTO tblDacRegBits2 VALUES(10,2,'clrend',1,12,0,'Clear Enable D');
INSERT INTO tblDacRegBits2 VALUES(11,3,'wen',1,0,0,'Enable Watchdog Timer');
INSERT INTO tblDacRegBits2 VALUES(12,3,'wpd',1,1,0,'Watchdog Timer Period');
INSERT INTO tblDacRegBits2 VALUES(13,3,'cren',1,3,0,'Enable CRC');
INSERT INTO tblDacRegBits2 VALUES(14,3,'dsdo',1,4,1,'Disable SDO');
INSERT INTO tblDacRegBits2 VALUES(15,3,'cha',1,5,1,'Channel A selected');
INSERT INTO tblDacRegBits2 VALUES(16,3,'chb',1,6,1,'Channel B selected');
INSERT INTO tblDacRegBits2 VALUES(17,3,'chc',1,7,1,'Channel C selected');
INSERT INTO tblDacRegBits2 VALUES(18,3,'chd',1,8,1,'Channel D selected');
INSERT INTO tblDacRegBits2 VALUES(19,3,'clsla',1,9,0,'Clear Select A');
INSERT INTO tblDacRegBits2 VALUES(20,3,'clslb',1,10,0,'Clear Select B');
INSERT INTO tblDacRegBits2 VALUES(21,3,'clslc',1,11,0,'Clear Select C');
INSERT INTO tblDacRegBits2 VALUES(22,3,'clsld',1,12,0,'Clear Select D');
INSERT INTO tblDacRegBits2 VALUES(23,4,'range',15,0,6,'Range');
INSERT INTO tblDacRegBits2 VALUES(24,4,'sren',1,4,0,'Slew Rate Enabled');
INSERT INTO tblDacRegBits2 VALUES(25,4,'sr_step',7,5,0,'Slew Rate Step Size');
INSERT INTO tblDacRegBits2 VALUES(26,4,'srclk_rate',15,8,15,'Slew Clock Rate');
INSERT INTO tblDacRegBits2 VALUES(27,4,'oten',1,12,1,'Output Enabled');
INSERT INTO tblDacRegBits2 VALUES(28,4,'hten',1,13,0,'Enable HART');
INSERT INTO tblDacRegBits2 VALUES(29,4,'sclim',3,14,0,'Voltage output short circuit limit');
INSERT INTO tblDacRegBits2 VALUES(30,5,'dac_data',65535,0,0,'Dac data setting');
INSERT INTO tblDacRegBits2 VALUES(31,6,'dca',1,0,1,'Buck-Boost converter A selected');
INSERT INTO tblDacRegBits2 VALUES(32,6,'dcb',1,1,1,'Buck-Boost converter B selected');
INSERT INTO tblDacRegBits2 VALUES(33,6,'dcc',1,2,1,'Buck-Boost converter C selected');
INSERT INTO tblDacRegBits2 VALUES(34,6,'dcd',1,3,1,'Buck-Boost converter D selected');
INSERT INTO tblDacRegBits2 VALUES(35,7,'pnsel',3,0,1,'Enable Buck-Boost converter positive and negative arm');
INSERT INTO tblDacRegBits2 VALUES(36,7,'nclmp',15,2,7,'Buck-Boost converter negative clamp setting');
INSERT INTO tblDacRegBits2 VALUES(37,7,'pclmp',15,6,8,'Buck-Boost converter positive clamp setting');
INSERT INTO tblDacRegBits2 VALUES(38,7,'cclp',3,10,0,'Buck-Boost converter configurable clamp setting');
INSERT INTO tblDacRegBits2 VALUES(39,8,'clen',1,0,0,'Enable DAC calibration');
INSERT INTO tblDacRegBits2 VALUES(40,9,'ugain',65535,0,0,'16-bit user gain data');
INSERT INTO tblDacRegBits2 VALUES(41,10,'uoff',65535,0,0,'16-bit user offset data');
INSERT INTO tblDacRegBits2 VALUES(42,11,'fa',1,0,0,'Fault channel A - Indicates fault condition channel A');
INSERT INTO tblDacRegBits2 VALUES(43,11,'fb',1,1,0,'Fault channel B - Indicates fault condition channel B');
INSERT INTO tblDacRegBits2 VALUES(44,11,'fc',1,2,0,'Fault channel C - Indicates fault condition channel C');
INSERT INTO tblDacRegBits2 VALUES(45,11,'fd',1,3,0,'Fault channel D - Indicates fault condition channel D');
INSERT INTO tblDacRegBits2 VALUES(46,11,'tmp',1,4,0,'Indicates over temperature condition');
INSERT INTO tblDacRegBits2 VALUES(47,11,'cre',1,5,0,'Indicates CRC error condition');
INSERT INTO tblDacRegBits2 VALUES(48,11,'utgl',1,6,1,'User toggle - Copy of user bit (UBT)');
INSERT INTO tblDacRegBits2 VALUES(49,11,'pga',1,7,0,'Buck-Boost A power good');
INSERT INTO tblDacRegBits2 VALUES(50,11,'pgb',1,8,0,'Buck-Boost B power good');
INSERT INTO tblDacRegBits2 VALUES(51,11,'pgc',1,9,0,'Buck-Boost C power good');
INSERT INTO tblDacRegBits2 VALUES(52,11,'pgd',1,10,0,'Buck-Boost D power good');
INSERT INTO tblDacRegBits2 VALUES(53,11,'wdt',1,11,0,'Watchdog timer fault');
INSERT INTO tblDacRegBits2 VALUES(54,11,'clst',1,12,0,replace('Indicates that Auto Learn operation is\nfinished','\n',char(10)));
INSERT INTO tblDacRegBits2 VALUES(55,12,'mfa',1,0,0,'masks the alarm pin from fault condition on channel A');
INSERT INTO tblDacRegBits2 VALUES(56,12,'mfb',1,1,0,'masks the alarm pin from fault condition on channel B');
INSERT INTO tblDacRegBits2 VALUES(57,12,'mfc',1,2,0,'masks the alarm pin from fault condition on channel C');
INSERT INTO tblDacRegBits2 VALUES(58,12,'mfd',1,3,0,'masks the alarm pin from fault condition on channel d');
INSERT INTO tblDacRegBits2 VALUES(59,12,'mtmp',1,4,0,replace('masks the alarm pin from over\ntemperature condition','\n',char(10)));
INSERT INTO tblDacRegBits2 VALUES(60,12,'mcre',1,5,0,replace('masks the alarm pin from CRC error\ncondition','\n',char(10)));
INSERT INTO tblDacRegBits2 VALUES(61,12,'mwt',1,11,0,replace('masks the alarm pin from watchdog\ntimer fault condition','\n',char(10)));
INSERT INTO tblDacRegBits2 VALUES(62,13,'ac_tmp',3,0,0,'Action over temperature condition');
INSERT INTO tblDacRegBits2 VALUES(63,13,'ac_vsc',3,2,0,'Action voltage output short circuit condition');
INSERT INTO tblDacRegBits2 VALUES(64,13,'ac_ioc',3,4,0,'Action current output open circuit condition');
INSERT INTO tblDacRegBits2 VALUES(65,13,'ac_cre_wdt',3,6,0,'Action CRC');
INSERT INTO tblDacRegBits2 VALUES(66,14,'bit8',1,8,0,'no information');
INSERT INTO tblDacRegBits2 VALUES(67,14,'hsclmp',1,9,0,'Buck-Boost positive output high side clamp');
INSERT INTO tblDacRegBits2 VALUES(68,14,'acode',61,10,0,'6 bit alarm code data');
INSERT INTO tblDacRegBits2 VALUES(69,15,'reserved',65535,0,0,'Reserved');
INSERT INTO tblDacRegBits2 VALUES(70,16,'rwd',1,0,0,'Reset watchdog timer');
INSERT INTO tblDacRegBits2 VALUES(71,17,'did',7,0,0,'3-bit device identification code');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits2" (
	`PK_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits2 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits2 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits2 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits2 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits2 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits2 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits2 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits2 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits2 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits2 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits2 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits2 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits2 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits2 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits2 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits2 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits2 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits2 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits2 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits2 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits2 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits2 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits2 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits2 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits2 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits2 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits2 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits2 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits2 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits2 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits2 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits2 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits2 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits2 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits2 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits2 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits2 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits2 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits2 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits2 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits2 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits2 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits2 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits2 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits2 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits2 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits2 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits2 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits2 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits2 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits2 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits2 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits2 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits2 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits2 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits2 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits2 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits2 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits2 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits2 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits2 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits2 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits2 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits2 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits2 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits2 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits2 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits2 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits2 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits2 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits2 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits2 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits2 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits2 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits2 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits2 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits2 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits2 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits2 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits2 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits2 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits2 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits2 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits2 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits2 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits2 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits2 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits2 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits2 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits2 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits2 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE `tblSmbParams` (
	`PK_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`NAME`	TEXT NOT NULL,
	`VALUE`	NUMERIC NOT NULL
);
INSERT INTO tblSmbParams VALUES(1,'BOARD_ID',5);
INSERT INTO tblSmbParams VALUES(2,'SOFTWARE_REV',0.064000000000000001332);
CREATE TABLE IF NOT EXISTS "tblTemperatureUnits" (
	`PK_ID`	INTEGER NOT NULL UNIQUE,
	`UNIT`	TEXT NOT NULL UNIQUE,
	`DESCRIPTION`	TEXT NOT NULL UNIQUE
);
INSERT INTO tblTemperatureUnits VALUES(0,'K','KELVIN');
INSERT INTO tblTemperatureUnits VALUES(1,'C','CELCIUS');
INSERT INTO tblTemperatureUnits VALUES(2,'F','FAHRENHEIT');
CREATE TABLE IF NOT EXISTS "tblSensorData" (
	`PK_DEV_ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`Device`	TEXT NOT NULL UNIQUE,
	`C0`	REAL,
	`C1`	REAL,
	`C2`	REAL,
	`C3`	REAL,
	`C4`	REAL,
	`C5`	REAL,
	`C6`	REAL,
	`C7`	REAL
);
INSERT INTO tblSensorData VALUES(1,'PT100',100.0,0.0038500000000000001235,1.499900000000000011,0.10863000000000000433,0.0,0.0,0.0,0.0);
INSERT INTO tblSensorData VALUES(2,'PT1000',1000.0,0.0037499999999999998612,1.6049999999999999822,0.16000000000000000333,0.0,0.0,0.0,0.0);
INSERT INTO tblSensorData VALUES(3,'NTC_THERMISTOR',10000.0,3669.0,0.0,0.0,0.0,0.0,0.0,0.0);
CREATE TABLE IF NOT EXISTS "tblAdcRegBits3" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits3 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits3 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits3 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits3 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits3 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits3 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits3 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits3 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits3 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits3 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits3 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits3 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits3 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits3 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits3 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits3 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits3 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits3 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits3 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits3 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits3 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits3 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits3 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits3 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits3 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits3 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits3 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits3 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits3 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits3 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits3 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits3 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits3 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits3 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits3 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits3 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits3 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits3 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits3 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits3 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits3 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits3 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits3 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits3 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits3 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits3 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits3 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits3 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits3 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits3 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits3 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits3 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits3 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits3 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits3 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits3 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits3 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits3 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits3 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits3 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits3 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits3 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits3 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits3 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits3 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits3 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits3 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits3 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits3 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits3 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits3 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits3 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits3 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits3 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits3 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits3 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits3 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits3 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits3 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(172,29,'ref_sel',3,3,1,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits3 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits3 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits3 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits3 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits3 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits3 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits3 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits3 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits3 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits3 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits3 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits3 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits10" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits10 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits10 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits10 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits10 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits10 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits10 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits10 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits10 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits10 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits10 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits10 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits10 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits10 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits10 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits10 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits10 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits10 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits10 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits10 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits10 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits10 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits10 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits10 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits10 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits10 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits10 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits10 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits10 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits10 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits10 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits10 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits10 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits10 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits10 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits10 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits10 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits10 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits10 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits10 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits10 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits10 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits10 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits10 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits10 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits10 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits10 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits10 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits10 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits10 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits10 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits10 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits10 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits10 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits10 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits10 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits10 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits10 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits10 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits10 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits10 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits10 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits10 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits10 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits10 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits10 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits10 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits10 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits10 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits10 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits10 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits10 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits10 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits10 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits10 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits10 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits10 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits10 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits10 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits10 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits10 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits10 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits10 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits10 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits10 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits10 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits10 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits10 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits10 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits10 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits10 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits10 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits11" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits11 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits11 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits11 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits11 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits11 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits11 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits11 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits11 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits11 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits11 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits11 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits11 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits11 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits11 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits11 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits11 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits11 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits11 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits11 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits11 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits11 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits11 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits11 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits11 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits11 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits11 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits11 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits11 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits11 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits11 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits11 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits11 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits11 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits11 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits11 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits11 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits11 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits11 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits11 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits11 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits11 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits11 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits11 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits11 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits11 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits11 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits11 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits11 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits11 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits11 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits11 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits11 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits11 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits11 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits11 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits11 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits11 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits11 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits11 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits11 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits11 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits11 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits11 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits11 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits11 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits11 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits11 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits11 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits11 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits11 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits11 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits11 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits11 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits11 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits11 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits11 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits11 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits11 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits11 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits11 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits11 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits11 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits11 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits11 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits11 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits11 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits11 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits11 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits11 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits11 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits11 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits12" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits12 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits12 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits12 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits12 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits12 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits12 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits12 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits12 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits12 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits12 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits12 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits12 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits12 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits12 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits12 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits12 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits12 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits12 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits12 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits12 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits12 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits12 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits12 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits12 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits12 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits12 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits12 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits12 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits12 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits12 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits12 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits12 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits12 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits12 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits12 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits12 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits12 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits12 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits12 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits12 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits12 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits12 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits12 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits12 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits12 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits12 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits12 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits12 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits12 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits12 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits12 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits12 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits12 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits12 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits12 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits12 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits12 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits12 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits12 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits12 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits12 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits12 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits12 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits12 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits12 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits12 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits12 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits12 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits12 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits12 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits12 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits12 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits12 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits12 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits12 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits12 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits12 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits12 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits12 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(178,29,'bipolar',1,11,0,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits12 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits12 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits12 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits12 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits12 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits12 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits12 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits12 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(205,33,'post_filter',7,17,0,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(207,33,'filter',7,21,1,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(210,34,'post_filter',7,17,0,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(212,34,'filter',7,21,1,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(215,35,'post_filter',7,17,0,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(217,35,'filter',7,21,1,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(220,36,'post_filter',7,17,0,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(222,36,'filter',7,21,1,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(225,37,'post_filter',7,17,0,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(227,37,'filter',7,21,1,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(230,38,'post_filter',7,17,0,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(232,38,'filter',7,21,1,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(235,39,'post_filter',7,17,0,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(237,39,'filter',7,21,1,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits12 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits12 VALUES(240,40,'post_filter',7,17,0,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits12 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits12 VALUES(242,40,'filter',7,21,1,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits4" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits4 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits4 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits4 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits4 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits4 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits4 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits4 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits4 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits4 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits4 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits4 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits4 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits4 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits4 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits4 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits4 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits4 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits4 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits4 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits4 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits4 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits4 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits4 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits4 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits4 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits4 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits4 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits4 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits4 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits4 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits4 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits4 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits4 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits4 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits4 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits4 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits4 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits4 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits4 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits4 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits4 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits4 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits4 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits4 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits4 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits4 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits4 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits4 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits4 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits4 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits4 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits4 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits4 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits4 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits4 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits4 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits4 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits4 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits4 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits4 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits4 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits4 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits4 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits4 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits4 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits4 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits4 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits4 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits4 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits4 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits4 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits4 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits4 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits4 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits4 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits4 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits4 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits4 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits4 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits4 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits4 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits4 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits4 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits4 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits4 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits4 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits4 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits4 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits4 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits4 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits4 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits5" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits5 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits5 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits5 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits5 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits5 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits5 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits5 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits5 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits5 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits5 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits5 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits5 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits5 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits5 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits5 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits5 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits5 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits5 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits5 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits5 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits5 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits5 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits5 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits5 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits5 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits5 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits5 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits5 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits5 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits5 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits5 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits5 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits5 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits5 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits5 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits5 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits5 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits5 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits5 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits5 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits5 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits5 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits5 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits5 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits5 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits5 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits5 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits5 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits5 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits5 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits5 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits5 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits5 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits5 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits5 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits5 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits5 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits5 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits5 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits5 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits5 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits5 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits5 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits5 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits5 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits5 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits5 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits5 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits5 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits5 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits5 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits5 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits5 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits5 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits5 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits5 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits5 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits5 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits5 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits5 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits5 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits5 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits5 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits5 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits5 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits5 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits5 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits5 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits5 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits5 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits5 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits6" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits6 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits6 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits6 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits6 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits6 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits6 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits6 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits6 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits6 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits6 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits6 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits6 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits6 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits6 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits6 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits6 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits6 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits6 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits6 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits6 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits6 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits6 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits6 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits6 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits6 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits6 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits6 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits6 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits6 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits6 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits6 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits6 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits6 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits6 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits6 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits6 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits6 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits6 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits6 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits6 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits6 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits6 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits6 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits6 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits6 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits6 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits6 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits6 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits6 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits6 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits6 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits6 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits6 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits6 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits6 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits6 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits6 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits6 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits6 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits6 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits6 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits6 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits6 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits6 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits6 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits6 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits6 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits6 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits6 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits6 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits6 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits6 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits6 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits6 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits6 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits6 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits6 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits6 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits6 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits6 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits6 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits6 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits6 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits6 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits6 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits6 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits6 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits6 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits6 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits6 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits6 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits7" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits7 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits7 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits7 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits7 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits7 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits7 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits7 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits7 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits7 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits7 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits7 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits7 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits7 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits7 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits7 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits7 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits7 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits7 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits7 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits7 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits7 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits7 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits7 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits7 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits7 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits7 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits7 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits7 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits7 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits7 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits7 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits7 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits7 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits7 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits7 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits7 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits7 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits7 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits7 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits7 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits7 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits7 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits7 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits7 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits7 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits7 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits7 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits7 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits7 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits7 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits7 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits7 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits7 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits7 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits7 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits7 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits7 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits7 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits7 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits7 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits7 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits7 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits7 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits7 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits7 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits7 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits7 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits7 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits7 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits7 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits7 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits7 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits7 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits7 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits7 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits7 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits7 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits7 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits7 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits7 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits7 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits7 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits7 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits7 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits7 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits7 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits7 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits7 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits7 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits7 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits7 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits8" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits8 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits8 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits8 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits8 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits8 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits8 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits8 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits8 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits8 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits8 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits8 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits8 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits8 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits8 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits8 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits8 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits8 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits8 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits8 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits8 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits8 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits8 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits8 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits8 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits8 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits8 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits8 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits8 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits8 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits8 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits8 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits8 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits8 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits8 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits8 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits8 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits8 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits8 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits8 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits8 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits8 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits8 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits8 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits8 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits8 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits8 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits8 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits8 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits8 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits8 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits8 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits8 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits8 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits8 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits8 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits8 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits8 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits8 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits8 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits8 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits8 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits8 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits8 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits8 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits8 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits8 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits8 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits8 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits8 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits8 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits8 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits8 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits8 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits8 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits8 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits8 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits8 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits8 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits8 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits8 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits8 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits8 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits8 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits8 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits8 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits8 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits8 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits8 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits8 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits8 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits8 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblAdcRegBits9" (
	`PK_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`FK_PARENT_ID`	INTEGER NOT NULL,
	`NAME`	TEXT NOT NULL,
	`MASK`	INTEGER NOT NULL,
	`SHIFT`	INTEGER NOT NULL,
	`VALUE`	INTEGER NOT NULL,
	`DESCRIPTION`	TEXT
);
INSERT INTO tblAdcRegBits9 VALUES(1,0,'ch_active',15,0,0,'indicate which channel is being converted');
INSERT INTO tblAdcRegBits9 VALUES(2,0,'por_flag',1,4,0,'indicates when a power-on reset occurs');
INSERT INTO tblAdcRegBits9 VALUES(3,0,'err',1,6,0,'indicates if one of the error bits has been asserted');
INSERT INTO tblAdcRegBits9 VALUES(4,0,'n_rdy',1,7,0,'Ready bit for the ADC');
INSERT INTO tblAdcRegBits9 VALUES(5,1,'clk_sel',1,0,0,'select the clock source for the ADC');
INSERT INTO tblAdcRegBits9 VALUES(6,1,'mode',15,2,0,'mode of operation for ADC');
INSERT INTO tblAdcRegBits9 VALUES(7,1,'power_mode',3,6,2,'select the power mode');
INSERT INTO tblAdcRegBits9 VALUES(8,1,'ref_en',1,8,1,'Internal reference voltage enable');
INSERT INTO tblAdcRegBits9 VALUES(9,1,'n_cs_en',1,9,1,'controls the operation of DOUT/RDY during data read operations');
INSERT INTO tblAdcRegBits9 VALUES(10,1,'data_status',1,10,0,'enables the transmission of the status register contents after each data register read');
INSERT INTO tblAdcRegBits9 VALUES(11,1,'cont_read',1,11,0,'Continuous read of the data register');
INSERT INTO tblAdcRegBits9 VALUES(12,1,'dout_n_rdy_del',1,12,1,'Controls the SCLK inactive edge to DOUT/RDY high time');
INSERT INTO tblAdcRegBits9 VALUES(13,2,'data',16777215,0,0,'conversion result from the ADC');
INSERT INTO tblAdcRegBits9 VALUES(14,3,'iout0_ch',15,0,0,'Channel select bits for the excitation current for IOUT0');
INSERT INTO tblAdcRegBits9 VALUES(15,3,'iout1_ch',15,4,11,'Channel select bits for the excitation current for IOUT1');
INSERT INTO tblAdcRegBits9 VALUES(16,3,'iout0',7,8,3,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits9 VALUES(17,3,'iout1',7,11,0,'set the value of the excitation current for IOUT0');
INSERT INTO tblAdcRegBits9 VALUES(18,3,'pdsw',1,15,0,'Bridge power-down switch control bit');
INSERT INTO tblAdcRegBits9 VALUES(19,3,'gpio_ctrl1',1,18,1,'Digital Output P1 enable');
INSERT INTO tblAdcRegBits9 VALUES(20,3,'gpio_ctrl2',1,19,0,'Digital Output P2 enable');
INSERT INTO tblAdcRegBits9 VALUES(21,3,'gpio_dat1',1,22,0,'Digital Output P1');
INSERT INTO tblAdcRegBits9 VALUES(22,3,'gpio_dat2',1,23,0,'Digital Output P2.');
INSERT INTO tblAdcRegBits9 VALUES(23,4,'vbias0',1,0,0,'Enable the bias voltage on the AIN0');
INSERT INTO tblAdcRegBits9 VALUES(24,4,'vbias1',1,1,0,'Enable the bias voltage on the AIN1');
INSERT INTO tblAdcRegBits9 VALUES(25,4,'vbias2',1,4,0,'Enable the bias voltage on the AIN2');
INSERT INTO tblAdcRegBits9 VALUES(26,4,'vbias3',1,5,0,'Enable the bias voltage on the AIN3');
INSERT INTO tblAdcRegBits9 VALUES(27,4,'vbias4',1,10,0,'Enable the bias voltage on the AIN4');
INSERT INTO tblAdcRegBits9 VALUES(28,4,'vbias5',1,11,0,'Enable the bias voltage on the AIN5');
INSERT INTO tblAdcRegBits9 VALUES(29,4,'vbias6',1,14,0,'Enable the bias voltage on the AIN6');
INSERT INTO tblAdcRegBits9 VALUES(30,4,'vbias7',1,15,0,'Enable the bias voltage on the AIN7');
INSERT INTO tblAdcRegBits9 VALUES(31,5,'silicon_revision',15,0,0,'Silicon revision number for the AD7124-4');
INSERT INTO tblAdcRegBits9 VALUES(32,5,'device_id',15,4,0,'Identification number for the AD7124-4');
INSERT INTO tblAdcRegBits9 VALUES(33,6,'rom_crc_err',1,0,0,'ROM error');
INSERT INTO tblAdcRegBits9 VALUES(34,6,'mm_crc_err',1,1,0,'Memory map error');
INSERT INTO tblAdcRegBits9 VALUES(35,6,'spi_crc_err',1,2,0,'CRC check of the serial communications');
INSERT INTO tblAdcRegBits9 VALUES(36,6,'spi_write_err',1,3,0,'error occurs during an SPI write operation');
INSERT INTO tblAdcRegBits9 VALUES(37,6,'spi_read_err',1,4,0,'error occurs during an SPI read operation');
INSERT INTO tblAdcRegBits9 VALUES(38,6,'spi_clk_cnt_err',1,5,0,replace('number of SCLK cycles is\nnot a multiple of eight','\n',char(10)));
INSERT INTO tblAdcRegBits9 VALUES(39,6,'spi_ignore_err',1,6,0,'CRC check of the internal registers');
INSERT INTO tblAdcRegBits9 VALUES(40,6,'aldo_psm_error',1,7,0,'Analog LDO');
INSERT INTO tblAdcRegBits9 VALUES(41,6,'dldo_psm_err',1,9,0,'Digital LDO error');
INSERT INTO tblAdcRegBits9 VALUES(42,6,'ref_det_err',1,11,0,'external reference being used by the ADC is less than 0.7 V');
INSERT INTO tblAdcRegBits9 VALUES(43,6,'ainm_uv_err',1,12,0,'Undervoltage detection on AINM');
INSERT INTO tblAdcRegBits9 VALUES(44,6,'ainm_ov_err',1,13,0,'Overvoltage detection on AINM');
INSERT INTO tblAdcRegBits9 VALUES(45,6,'ainp_uv_err',1,14,0,'Undervoltage detection on AINP');
INSERT INTO tblAdcRegBits9 VALUES(46,6,'ainp_ov_err',1,15,0,'Overvoltage detection on AINP');
INSERT INTO tblAdcRegBits9 VALUES(47,6,'adc_sat_err',1,16,0,'ADC saturation flag');
INSERT INTO tblAdcRegBits9 VALUES(48,6,'adc_conv_err',1,17,0,'error occured during a conversion');
INSERT INTO tblAdcRegBits9 VALUES(49,6,'adc_cal_err',1,18,0,'calibration is initiated but not completed');
INSERT INTO tblAdcRegBits9 VALUES(50,6,'ldo_cap_err',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits9 VALUES(51,7,'rom_crc_err_en',1,0,0,'CRC calculation is performed on the ROM contents on power-on');
INSERT INTO tblAdcRegBits9 VALUES(52,7,'mm_crc_err_en',1,1,0,'CRC calculation is performed on the memory map');
INSERT INTO tblAdcRegBits9 VALUES(53,7,'spi_crc_err_en',1,2,0,'CRC check of all read and write operations');
INSERT INTO tblAdcRegBits9 VALUES(54,7,'spi_write_err_en',1,3,1,replace('bit in the error register is set when an error occurs during a\n write operation','\n',char(10)));
INSERT INTO tblAdcRegBits9 VALUES(55,7,'spi_read_err_en',1,4,1,'bit in the error register is set when an error occurs during a read operation');
INSERT INTO tblAdcRegBits9 VALUES(56,7,'spi_sclk_cnd_err_en',1,5,0,'write operation.');
INSERT INTO tblAdcRegBits9 VALUES(57,7,'spi_ignore_err_en',1,6,0,'User write instructions are ignored by the ADC');
INSERT INTO tblAdcRegBits9 VALUES(58,7,'aldo_psm_err_en',1,7,1,'analog LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits9 VALUES(59,7,'aldo_psm_trip_test_en',1,8,1,replace('the input to the\ntest circuit is tied to AVSS instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits9 VALUES(60,7,'dldo_psm_err_en',1,9,1,'digital LDO voltage is continuously monitored');
INSERT INTO tblAdcRegBits9 VALUES(61,7,'dldo_psm_trip_test_en',1,10,1,replace('the input to the test\ncircuit is tied to DGND instead of the LDO output','\n',char(10)));
INSERT INTO tblAdcRegBits9 VALUES(62,7,'ref_det_err_en',1,11,1,'external reference being used by the ADC is continuously monitored');
INSERT INTO tblAdcRegBits9 VALUES(63,7,'ainm_uv_err_en',1,12,0,'undervoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits9 VALUES(64,7,'ainm_ov_err_en',1,13,0,'overvoltage monitor on all enabled on AINM');
INSERT INTO tblAdcRegBits9 VALUES(65,7,'ainp_uv_err_en',1,14,0,'undervoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits9 VALUES(66,7,'ainp_ov_err_en',1,15,0,'overvoltage monitor on all enabled AINP');
INSERT INTO tblAdcRegBits9 VALUES(67,7,'adc_sat_err_en',1,16,1,'ADC modulator saturation check');
INSERT INTO tblAdcRegBits9 VALUES(68,7,'adc_conv_err_en',1,17,1,'conversions are monitored');
INSERT INTO tblAdcRegBits9 VALUES(69,7,'adc_cal_err_en',1,18,1,'calibration fail check is enabled');
INSERT INTO tblAdcRegBits9 VALUES(70,7,'ldo_cap_chk0',1,19,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits9 VALUES(71,7,'ldo_cap_chk1',1,20,0,'Analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits9 VALUES(72,7,'ldo_cap_chk_test_en',1,21,0,'Test of analog/digital LDO decoupling capacitor check');
INSERT INTO tblAdcRegBits9 VALUES(73,7,'mclk_cnt_en',1,22,0,'master clock counter is enabled');
INSERT INTO tblAdcRegBits9 VALUES(74,8,'mclk_cnt',255,0,0,'determine the frequency of the internal/external oscillator');
INSERT INTO tblAdcRegBits9 VALUES(75,9,'ainm',31,0,3,'ch0 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(76,9,'ainp',31,5,1,'ch0 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(77,9,'setup',7,12,0,'ch0 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(78,9,'enable',1,15,1,'ch0 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(79,10,'ainm',31,0,6,'ch1 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(80,10,'ainp',31,5,5,'ch1 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(81,10,'setup',7,12,3,'ch1 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(82,10,'enable',1,15,1,'ch1 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(83,11,'ainm',31,0,23,'ch2 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(84,11,'ainp',31,5,22,'ch2 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(85,11,'setup',7,12,1,'ch2 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(86,11,'enable',1,15,1,'ch2 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(87,12,'ainm',31,0,19,'ch3 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(88,12,'ainp',31,5,18,'ch3 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(89,12,'setup',7,12,1,'ch3 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(90,12,'enable',1,15,1,'ch3 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(91,13,'ainm',31,0,1,'ch4 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(92,13,'ainp',31,5,0,'ch4 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(93,13,'setup',7,12,4,'ch4 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(94,13,'enable',1,15,1,'ch4 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(95,14,'ainm',31,0,17,'ch5 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(96,14,'ainp',31,5,16,'ch5 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(97,14,'setup',7,12,3,'ch5 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(98,14,'enable',1,15,1,'ch5 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(99,15,'ainm',31,0,19,'ch6 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(100,15,'ainp',31,5,6,'ch6 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(101,15,'setup',7,12,1,'ch6 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(102,15,'enable',1,15,1,'ch6 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(103,16,'ainm',31,0,0,'ch7 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(104,16,'ainp',31,5,0,'ch7 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(105,16,'setup',7,12,0,'ch7 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(106,16,'enable',1,15,0,'ch7 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(107,17,'ainm',31,0,0,'ch8 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(108,17,'ainp',31,5,0,'ch8 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(109,17,'setup',7,12,0,'ch8 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(110,17,'enable',1,15,0,'ch8 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(111,18,'ainm',31,0,0,'ch9 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(112,18,'ainp',31,5,0,'ch9 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(113,18,'setup',7,12,0,'ch9 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(114,18,'enable',1,15,0,'ch9 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(115,19,'ainm',31,0,0,'ch10 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(116,19,'ainp',31,5,0,'ch10 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(117,19,'setup',7,12,0,'ch10 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(118,19,'enable',1,15,0,'ch10 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(119,20,'ainm',31,0,0,'ch11 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(120,20,'ainp',31,5,0,'ch11 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(121,20,'setup',7,12,0,'ch11 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(122,20,'enable',1,15,0,'ch11 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(123,21,'ainm',31,0,0,'ch12 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(124,21,'ainp',31,5,0,'ch12 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(125,21,'setup',7,12,0,'ch12 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(126,21,'enable',1,15,0,'ch12 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(127,22,'ainm',31,0,0,'ch13 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(128,22,'ainp',31,5,0,'ch13 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(129,22,'setup',7,12,0,'ch13 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(130,22,'enable',1,15,0,'ch13 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(131,23,'ainm',31,0,0,'ch14 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(132,23,'ainp',31,5,0,'ch14 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(133,23,'setup',7,12,0,'ch14 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(134,23,'enable',1,15,0,'ch14 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(135,24,'ainm',31,0,0,'ch15 Neg analog input AINM input select');
INSERT INTO tblAdcRegBits9 VALUES(136,24,'ainp',31,5,0,'ch15 Pos analog input AINP input select');
INSERT INTO tblAdcRegBits9 VALUES(137,24,'setup',7,12,0,'ch15 identify which of the eight setups are used');
INSERT INTO tblAdcRegBits9 VALUES(138,24,'enable',1,15,0,'ch15 Channel enable bit');
INSERT INTO tblAdcRegBits9 VALUES(139,25,'pga',7,0,4,'cfg0 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(140,25,'ref_sel',3,3,0,'cfg0 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(141,25,'ain_bufm',1,5,1,'cfg0 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(142,25,'ain_bufp',1,6,1,'cfg0 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(143,25,'ref_bufm',1,7,1,'cfg0 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(144,25,'ref_bufp',1,8,1,'cfg0 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(145,25,'burnout',3,9,0,'cfg0 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(146,25,'bipolar',1,11,1,'cfg0 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(147,26,'pga',7,0,0,'cfg1 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(148,26,'ref_sel',3,3,2,'cfg1 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(149,26,'ain_bufm',1,5,1,'cfg1 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(150,26,'ain_bufp',1,6,1,'cfg1 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(151,26,'ref_bufm',1,7,1,'cfg1 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(152,26,'ref_bufp',1,8,1,'cfg1 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(153,26,'burnout',3,9,0,'cfg1 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(154,26,'bipolar',1,11,0,'cfg1 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(155,27,'pga',7,0,0,'cfg2 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(156,27,'ref_sel',3,3,3,'cfg2 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(157,27,'ain_bufm',1,5,1,'cfg2 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(158,27,'ain_bufp',1,6,1,'cfg2 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(159,27,'ref_bufm',1,7,1,'cfg2 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(160,27,'ref_bufp',1,8,1,'cfg2 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(161,27,'burnout',3,9,0,'cfg2 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(162,27,'bipolar',1,11,0,'cfg2 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(163,28,'pga',7,0,0,'cfg3 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(164,28,'ref_sel',3,3,2,'cfg3 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(165,28,'ain_bufm',1,5,1,'cfg3 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(166,28,'ain_bufp',1,6,1,'cfg3 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(167,28,'ref_bufm',1,7,1,'cfg3 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(168,28,'ref_bufp',1,8,1,'cfg3 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(169,28,'burnout',3,9,0,'cfg3 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(170,28,'bipolar',1,11,1,'cfg3 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(171,29,'pga',7,0,0,'cfg4 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(172,29,'ref_sel',3,3,2,'cfg4 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(173,29,'ain_bufm',1,5,1,'cfg4 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(174,29,'ain_bufp',1,6,1,'cfg4 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(175,29,'ref_bufm',1,7,1,'cfg4 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(176,29,'ref_bufp',1,8,1,'cfg4 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(177,29,'burnout',3,9,0,'cfg4 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(178,29,'bipolar',1,11,1,'cfg4 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(179,30,'pga',7,0,0,'cfg5 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(180,30,'ref_sel',3,3,0,'cfg5 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(181,30,'ain_bufm',1,5,0,'cfg5 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(182,30,'ain_bufp',1,6,0,'cfg5 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(183,30,'ref_bufm',1,7,0,'cfg5 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(184,30,'ref_bufp',1,8,0,'cfg5 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(185,30,'burnout',3,9,0,'cfg5 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(186,30,'bipolar',1,11,0,'cfg5 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(187,31,'pga',7,0,0,'cfg6 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(188,31,'ref_sel',3,3,0,'cfg6 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(189,31,'ain_bufm',1,5,0,'cfg6 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(190,31,'ain_bufp',1,6,0,'cfg6 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(191,31,'ref_bufm',1,7,0,'cfg6 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(192,31,'ref_bufp',1,8,0,'cfg6 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(193,31,'burnout',3,9,0,'cfg6 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(194,31,'bipolar',1,11,0,'cfg6 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(195,32,'pga',7,0,0,'cfg7 Gain select bits');
INSERT INTO tblAdcRegBits9 VALUES(196,32,'ref_sel',3,3,0,'cfg7 Reference source select bits');
INSERT INTO tblAdcRegBits9 VALUES(197,32,'ain_bufm',1,5,0,'cfg7 Buffer enable on AINM');
INSERT INTO tblAdcRegBits9 VALUES(198,32,'ain_bufp',1,6,0,'cfg7 Buffer enable on AINP');
INSERT INTO tblAdcRegBits9 VALUES(199,32,'ref_bufm',1,7,0,'cfg7 Buffer enable on REFINx(−)');
INSERT INTO tblAdcRegBits9 VALUES(200,32,'ref_bufp',1,8,0,'cfg7 Buffer enable on REFINx(+)');
INSERT INTO tblAdcRegBits9 VALUES(201,32,'burnout',3,9,0,'cfg7 magnitude of the sensor burnout detect current source');
INSERT INTO tblAdcRegBits9 VALUES(202,32,'bipolar',1,11,0,'cfg7 Polarity select bit');
INSERT INTO tblAdcRegBits9 VALUES(203,33,'fs',2047,0,384,'ftr0 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(204,33,'single_cycle',1,16,0,'ftr0 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(205,33,'post_filter',7,17,6,'ftr0 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(206,33,'rej60',1,20,1,'ftr0 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(207,33,'filter',7,21,2,'ftr0 Filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(208,34,'fs',2047,0,384,'ftr1 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(209,34,'single_cycle',1,16,0,'ftr1 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(210,34,'post_filter',7,17,6,'ftr1 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(211,34,'rej60',1,20,1,'ftr1 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(212,34,'filter',7,21,2,'ftr1 Filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(213,35,'fs',2047,0,384,'ftr2 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(214,35,'single_cycle',1,16,0,'ftr2 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(215,35,'post_filter',7,17,6,'ftr2 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(216,35,'rej60',1,20,1,'ftr2 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(217,35,'filter',7,21,2,'ftr2 Filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(218,36,'fs',2047,0,384,'ftr3 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(219,36,'single_cycle',1,16,0,'ftr3 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(220,36,'post_filter',7,17,6,'ftr3 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(221,36,'rej60',1,20,1,'ftr3 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(222,36,'filter',7,21,2,'ftr3 Filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(223,37,'fs',2047,0,384,'ftr4 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(224,37,'single_cycle',1,16,0,'ftr4 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(225,37,'post_filter',7,17,6,'ftr4 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(226,37,'rej60',1,20,1,'ftr4 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(227,37,'filter',7,21,2,'ftr4 Filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(228,38,'fs',2047,0,384,'ftr5 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(229,38,'single_cycle',1,16,0,'ftr5 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(230,38,'post_filter',7,17,6,'ftr5 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(231,38,'rej60',1,20,1,'ftr5 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(232,38,'filter',7,21,2,'ftr5 Filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(233,39,'fs',2047,0,384,'ftr6 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(234,39,'single_cycle',1,16,0,'ftr6 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(235,39,'post_filter',7,17,6,'ftr6 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(236,39,'rej60',1,20,1,'ftr6 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(237,39,'filter',7,21,2,'ftr6 Filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(238,40,'fs',2047,0,384,'ftr7 Filter output data rate select bits');
INSERT INTO tblAdcRegBits9 VALUES(239,40,'single_cycle',1,16,0,'ftr7 Single cycle conversion enable bit');
INSERT INTO tblAdcRegBits9 VALUES(240,40,'post_filter',7,17,6,'ftr7 Post filter type select bits');
INSERT INTO tblAdcRegBits9 VALUES(241,40,'rej60',1,20,1,'ftr7 first order notch is placed at 60 Hz');
INSERT INTO tblAdcRegBits9 VALUES(242,40,'filter',7,21,2,'ftr7 Filter type select bits');
CREATE TABLE IF NOT EXISTS "tblADS1015Registers" (
	`NAME`	TEXT NOT NULL,
	`ADDRESS`	INTEGER NOT NULL,
	`DEFAULT`	INTEGER NOT NULL,
	`BYTES`	INTEGER NOT NULL,
	`READ`	INTEGER NOT NULL,
	`WRITE`	INTEGER NOT NULL
);
INSERT INTO tblADS1015Registers VALUES('Conversion',0,0,2,1,0);
INSERT INTO tblADS1015Registers VALUES('Config',1,34179,2,1,1);
INSERT INTO tblADS1015Registers VALUES('Lo_thresh',2,32768,2,1,1);
INSERT INTO tblADS1015Registers VALUES('Hi_thresh',3,32767,2,1,1);
CREATE TABLE IF NOT EXISTS "tblADS1015RegBits" ( `PK_ID` INTEGER PRIMARY KEY AUTOINCREMENT, `FK_PARENT_ID` INTEGER NOT NULL, `NAME` TEXT NOT NULL, `MASK` INTEGER NOT NULL, `SHIFT` INTEGER NOT NULL, `VALUE` INTEGER NOT NULL, `DESCRIPTION` TEXT );
INSERT INTO tblADS1015RegBits VALUES(1,0,'reserved',7,0,0,'Reserved');
INSERT INTO tblADS1015RegBits VALUES(2,0,'data',4095,4,0,'Conversion Data');
INSERT INTO tblADS1015RegBits VALUES(3,1,'comp_que',3,0,3,'Comparator queue and disable');
INSERT INTO tblADS1015RegBits VALUES(4,1,'comp_lat',1,2,0,'Latching comparator');
INSERT INTO tblADS1015RegBits VALUES(5,1,'comp_pol',1,3,0,'Comparator polarity');
INSERT INTO tblADS1015RegBits VALUES(6,1,'comp_mode',1,4,0,'Comparator mode');
INSERT INTO tblADS1015RegBits VALUES(7,1,'dr',7,5,4,'Data rate');
INSERT INTO tblADS1015RegBits VALUES(8,1,'mode',1,8,0,'Device operating mode');
INSERT INTO tblADS1015RegBits VALUES(9,1,'pga',7,9,2,replace('Programmable gain amplifier configuration\r','\r',char(13)));
INSERT INTO tblADS1015RegBits VALUES(10,1,'mux',7,12,0,'Input multiplexer configuration');
INSERT INTO tblADS1015RegBits VALUES(11,1,'os',1,15,1,'Operational status or single-shot conversion start');
INSERT INTO tblADS1015RegBits VALUES(12,2,'reserved',7,0,0,'Reserved');
INSERT INTO tblADS1015RegBits VALUES(13,2,'lo_thresh',4095,4,0,'Lo_threshold');
INSERT INTO tblADS1015RegBits VALUES(14,3,'reserved',7,0,2048,'Reserved');
INSERT INTO tblADS1015RegBits VALUES(15,3,'hi_thresh',4095,4,2047,'Hi_threshould');
CREATE TABLE IF NOT EXISTS "tblAdcParams" (
	`PK_ADC_ID`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`temperature_unit`	INTEGER NOT NULL,
	`sensor_type`	INTEGER NOT NULL,
	`gain`	INTEGER NOT NULL
);
INSERT INTO tblAdcParams VALUES(1,0,2,16);
INSERT INTO tblAdcParams VALUES(2,0,2,16);
INSERT INTO tblAdcParams VALUES(3,0,2,16);
INSERT INTO tblAdcParams VALUES(4,0,2,16);
INSERT INTO tblAdcParams VALUES(5,0,2,16);
INSERT INTO tblAdcParams VALUES(6,0,2,16);
INSERT INTO tblAdcParams VALUES(7,0,2,16);
INSERT INTO tblAdcParams VALUES(8,0,2,16);
INSERT INTO tblAdcParams VALUES(9,0,2,16);
INSERT INTO tblAdcParams VALUES(10,0,2,16);
INSERT INTO tblAdcParams VALUES(11,0,2,16);
INSERT INTO tblAdcParams VALUES(12,0,2,16);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('tblTlmDictionary',2);
INSERT INTO sqlite_sequence VALUES('tblSmbCmds',38);
INSERT INTO sqlite_sequence VALUES('tblHtrParams',2);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits1',242);
INSERT INTO sqlite_sequence VALUES('tblDacRegBits1',71);
INSERT INTO sqlite_sequence VALUES('tblDacRegBits2',71);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits2',242);
INSERT INTO sqlite_sequence VALUES('tblSmbParams',2);
INSERT INTO sqlite_sequence VALUES('tblSensorData',3);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits3',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits10',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits11',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits12',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits4',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits5',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits6',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits7',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits8',242);
INSERT INTO sqlite_sequence VALUES('tblAdcRegBits9',242);
INSERT INTO sqlite_sequence VALUES('tblADS1015RegBits',15);
INSERT INTO sqlite_sequence VALUES('tblAdcParams',12);
COMMIT;
